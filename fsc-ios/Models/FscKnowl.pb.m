// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FscKnowl.pb.h"
// @@protoc_insertion_point(imports)

@implementation FscKnowlRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FscKnowlRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface KnowlListPb ()
@property (strong) NSMutableArray * knowlArray;
@end

@implementation KnowlListPb

@synthesize knowlArray;
@dynamic knowl;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static KnowlListPb* defaultKnowlListPbInstance = nil;
+ (void) initialize {
  if (self == [KnowlListPb class]) {
    defaultKnowlListPbInstance = [[KnowlListPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultKnowlListPbInstance;
}
- (instancetype) defaultInstance {
  return defaultKnowlListPbInstance;
}
- (NSArray *)knowl {
  return knowlArray;
}
- (KnowlPb*)knowlAtIndex:(NSUInteger)index {
  return [knowlArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.knowlArray enumerateObjectsUsingBlock:^(KnowlPb *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.knowlArray enumerateObjectsUsingBlock:^(KnowlPb *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (KnowlListPb*) parseFromData:(NSData*) data {
  return (KnowlListPb*)[[[KnowlListPb builder] mergeFromData:data] build];
}
+ (KnowlListPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KnowlListPb*)[[[KnowlListPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (KnowlListPb*) parseFromInputStream:(NSInputStream*) input {
  return (KnowlListPb*)[[[KnowlListPb builder] mergeFromInputStream:input] build];
}
+ (KnowlListPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KnowlListPb*)[[[KnowlListPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KnowlListPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (KnowlListPb*)[[[KnowlListPb builder] mergeFromCodedInputStream:input] build];
}
+ (KnowlListPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KnowlListPb*)[[[KnowlListPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KnowlListPbBuilder*) builder {
  return [[KnowlListPbBuilder alloc] init];
}
+ (KnowlListPbBuilder*) builderWithPrototype:(KnowlListPb*) prototype {
  return [[KnowlListPb builder] mergeFrom:prototype];
}
- (KnowlListPbBuilder*) builder {
  return [KnowlListPb builder];
}
- (KnowlListPbBuilder*) toBuilder {
  return [KnowlListPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.knowlArray enumerateObjectsUsingBlock:^(KnowlPb *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"knowl"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (KnowlPb* element in self.knowlArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"knowl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[KnowlListPb class]]) {
    return NO;
  }
  KnowlListPb *otherMessage = other;
  return
      [self.knowlArray isEqualToArray:otherMessage.knowlArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.knowlArray enumerateObjectsUsingBlock:^(KnowlPb *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface KnowlListPbBuilder()
@property (strong) KnowlListPb* resultKnowlListPb;
@end

@implementation KnowlListPbBuilder
@synthesize resultKnowlListPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultKnowlListPb = [[KnowlListPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultKnowlListPb;
}
- (KnowlListPbBuilder*) clear {
  self.resultKnowlListPb = [[KnowlListPb alloc] init];
  return self;
}
- (KnowlListPbBuilder*) clone {
  return [KnowlListPb builderWithPrototype:resultKnowlListPb];
}
- (KnowlListPb*) defaultInstance {
  return [KnowlListPb defaultInstance];
}
- (KnowlListPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (KnowlListPb*) buildPartial {
  KnowlListPb* returnMe = resultKnowlListPb;
  self.resultKnowlListPb = nil;
  return returnMe;
}
- (KnowlListPbBuilder*) mergeFrom:(KnowlListPb*) other {
  if (other == [KnowlListPb defaultInstance]) {
    return self;
  }
  if (other.knowlArray.count > 0) {
    if (resultKnowlListPb.knowlArray == nil) {
      resultKnowlListPb.knowlArray = [[NSMutableArray alloc] initWithArray:other.knowlArray];
    } else {
      [resultKnowlListPb.knowlArray addObjectsFromArray:other.knowlArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (KnowlListPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (KnowlListPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        KnowlPbBuilder* subBuilder = [KnowlPb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKnowl:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)knowl {
  return resultKnowlListPb.knowlArray;
}
- (KnowlPb*)knowlAtIndex:(NSUInteger)index {
  return [resultKnowlListPb knowlAtIndex:index];
}
- (KnowlListPbBuilder *)addKnowl:(KnowlPb*)value {
  if (resultKnowlListPb.knowlArray == nil) {
    resultKnowlListPb.knowlArray = [[NSMutableArray alloc]init];
  }
  [resultKnowlListPb.knowlArray addObject:value];
  return self;
}
- (KnowlListPbBuilder *)setKnowlArray:(NSArray *)array {
  resultKnowlListPb.knowlArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (KnowlListPbBuilder *)clearKnowl {
  resultKnowlListPb.knowlArray = nil;
  return self;
}
@end

@interface KnowlPb ()
@property SInt64 id;
@property SInt64 schoolId;
@property SInt64 subjectId;
@property SInt64 knowlPointId;
@property SInt64 studentId;
@property SInt64 rightCount;
@property SInt64 wrongCount;
@property Float64 accuracy;
@property SInt64 modifiedDate;
@property SInt32 dataStatus;
@property SInt32 depth;
@property (strong) NSString* knowlPointName;
@property SInt64 parentId;
@property SInt32 isParent;
@property SInt64 classId;
@end

@implementation KnowlPb

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasSchoolId {
  return !!hasSchoolId_;
}
- (void) setHasSchoolId:(BOOL) _value_ {
  hasSchoolId_ = !!_value_;
}
@synthesize schoolId;
- (BOOL) hasSubjectId {
  return !!hasSubjectId_;
}
- (void) setHasSubjectId:(BOOL) _value_ {
  hasSubjectId_ = !!_value_;
}
@synthesize subjectId;
- (BOOL) hasKnowlPointId {
  return !!hasKnowlPointId_;
}
- (void) setHasKnowlPointId:(BOOL) _value_ {
  hasKnowlPointId_ = !!_value_;
}
@synthesize knowlPointId;
- (BOOL) hasStudentId {
  return !!hasStudentId_;
}
- (void) setHasStudentId:(BOOL) _value_ {
  hasStudentId_ = !!_value_;
}
@synthesize studentId;
- (BOOL) hasRightCount {
  return !!hasRightCount_;
}
- (void) setHasRightCount:(BOOL) _value_ {
  hasRightCount_ = !!_value_;
}
@synthesize rightCount;
- (BOOL) hasWrongCount {
  return !!hasWrongCount_;
}
- (void) setHasWrongCount:(BOOL) _value_ {
  hasWrongCount_ = !!_value_;
}
@synthesize wrongCount;
- (BOOL) hasAccuracy {
  return !!hasAccuracy_;
}
- (void) setHasAccuracy:(BOOL) _value_ {
  hasAccuracy_ = !!_value_;
}
@synthesize accuracy;
- (BOOL) hasModifiedDate {
  return !!hasModifiedDate_;
}
- (void) setHasModifiedDate:(BOOL) _value_ {
  hasModifiedDate_ = !!_value_;
}
@synthesize modifiedDate;
- (BOOL) hasDataStatus {
  return !!hasDataStatus_;
}
- (void) setHasDataStatus:(BOOL) _value_ {
  hasDataStatus_ = !!_value_;
}
@synthesize dataStatus;
- (BOOL) hasDepth {
  return !!hasDepth_;
}
- (void) setHasDepth:(BOOL) _value_ {
  hasDepth_ = !!_value_;
}
@synthesize depth;
- (BOOL) hasKnowlPointName {
  return !!hasKnowlPointName_;
}
- (void) setHasKnowlPointName:(BOOL) _value_ {
  hasKnowlPointName_ = !!_value_;
}
@synthesize knowlPointName;
- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (BOOL) hasIsParent {
  return !!hasIsParent_;
}
- (void) setHasIsParent:(BOOL) _value_ {
  hasIsParent_ = !!_value_;
}
@synthesize isParent;
- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.schoolId = 0L;
    self.subjectId = 0L;
    self.knowlPointId = 0L;
    self.studentId = 0L;
    self.rightCount = 0L;
    self.wrongCount = 0L;
    self.accuracy = 0;
    self.modifiedDate = 0L;
    self.dataStatus = 0;
    self.depth = 0;
    self.knowlPointName = @"";
    self.parentId = 0L;
    self.isParent = 0;
    self.classId = 0L;
  }
  return self;
}
static KnowlPb* defaultKnowlPbInstance = nil;
+ (void) initialize {
  if (self == [KnowlPb class]) {
    defaultKnowlPbInstance = [[KnowlPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultKnowlPbInstance;
}
- (instancetype) defaultInstance {
  return defaultKnowlPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasSchoolId) {
    [output writeInt64:2 value:self.schoolId];
  }
  if (self.hasSubjectId) {
    [output writeInt64:3 value:self.subjectId];
  }
  if (self.hasKnowlPointId) {
    [output writeInt64:4 value:self.knowlPointId];
  }
  if (self.hasStudentId) {
    [output writeInt64:5 value:self.studentId];
  }
  if (self.hasRightCount) {
    [output writeInt64:6 value:self.rightCount];
  }
  if (self.hasWrongCount) {
    [output writeInt64:7 value:self.wrongCount];
  }
  if (self.hasAccuracy) {
    [output writeDouble:8 value:self.accuracy];
  }
  if (self.hasModifiedDate) {
    [output writeInt64:9 value:self.modifiedDate];
  }
  if (self.hasDataStatus) {
    [output writeInt32:10 value:self.dataStatus];
  }
  if (self.hasDepth) {
    [output writeInt32:11 value:self.depth];
  }
  if (self.hasKnowlPointName) {
    [output writeString:12 value:self.knowlPointName];
  }
  if (self.hasParentId) {
    [output writeInt64:13 value:self.parentId];
  }
  if (self.hasIsParent) {
    [output writeInt32:14 value:self.isParent];
  }
  if (self.hasClassId) {
    [output writeInt64:15 value:self.classId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasSchoolId) {
    size_ += computeInt64Size(2, self.schoolId);
  }
  if (self.hasSubjectId) {
    size_ += computeInt64Size(3, self.subjectId);
  }
  if (self.hasKnowlPointId) {
    size_ += computeInt64Size(4, self.knowlPointId);
  }
  if (self.hasStudentId) {
    size_ += computeInt64Size(5, self.studentId);
  }
  if (self.hasRightCount) {
    size_ += computeInt64Size(6, self.rightCount);
  }
  if (self.hasWrongCount) {
    size_ += computeInt64Size(7, self.wrongCount);
  }
  if (self.hasAccuracy) {
    size_ += computeDoubleSize(8, self.accuracy);
  }
  if (self.hasModifiedDate) {
    size_ += computeInt64Size(9, self.modifiedDate);
  }
  if (self.hasDataStatus) {
    size_ += computeInt32Size(10, self.dataStatus);
  }
  if (self.hasDepth) {
    size_ += computeInt32Size(11, self.depth);
  }
  if (self.hasKnowlPointName) {
    size_ += computeStringSize(12, self.knowlPointName);
  }
  if (self.hasParentId) {
    size_ += computeInt64Size(13, self.parentId);
  }
  if (self.hasIsParent) {
    size_ += computeInt32Size(14, self.isParent);
  }
  if (self.hasClassId) {
    size_ += computeInt64Size(15, self.classId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (KnowlPb*) parseFromData:(NSData*) data {
  return (KnowlPb*)[[[KnowlPb builder] mergeFromData:data] build];
}
+ (KnowlPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KnowlPb*)[[[KnowlPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (KnowlPb*) parseFromInputStream:(NSInputStream*) input {
  return (KnowlPb*)[[[KnowlPb builder] mergeFromInputStream:input] build];
}
+ (KnowlPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KnowlPb*)[[[KnowlPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KnowlPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (KnowlPb*)[[[KnowlPb builder] mergeFromCodedInputStream:input] build];
}
+ (KnowlPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KnowlPb*)[[[KnowlPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KnowlPbBuilder*) builder {
  return [[KnowlPbBuilder alloc] init];
}
+ (KnowlPbBuilder*) builderWithPrototype:(KnowlPb*) prototype {
  return [[KnowlPb builder] mergeFrom:prototype];
}
- (KnowlPbBuilder*) builder {
  return [KnowlPb builder];
}
- (KnowlPbBuilder*) toBuilder {
  return [KnowlPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasSchoolId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"schoolId", [NSNumber numberWithLongLong:self.schoolId]];
  }
  if (self.hasSubjectId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subjectId", [NSNumber numberWithLongLong:self.subjectId]];
  }
  if (self.hasKnowlPointId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"knowlPointId", [NSNumber numberWithLongLong:self.knowlPointId]];
  }
  if (self.hasStudentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"studentId", [NSNumber numberWithLongLong:self.studentId]];
  }
  if (self.hasRightCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rightCount", [NSNumber numberWithLongLong:self.rightCount]];
  }
  if (self.hasWrongCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"wrongCount", [NSNumber numberWithLongLong:self.wrongCount]];
  }
  if (self.hasAccuracy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accuracy", [NSNumber numberWithDouble:self.accuracy]];
  }
  if (self.hasModifiedDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"modifiedDate", [NSNumber numberWithLongLong:self.modifiedDate]];
  }
  if (self.hasDataStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dataStatus", [NSNumber numberWithInteger:self.dataStatus]];
  }
  if (self.hasDepth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"depth", [NSNumber numberWithInteger:self.depth]];
  }
  if (self.hasKnowlPointName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"knowlPointName", self.knowlPointName];
  }
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  if (self.hasIsParent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isParent", [NSNumber numberWithInteger:self.isParent]];
  }
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasSchoolId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.schoolId] forKey: @"schoolId"];
  }
  if (self.hasSubjectId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.subjectId] forKey: @"subjectId"];
  }
  if (self.hasKnowlPointId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.knowlPointId] forKey: @"knowlPointId"];
  }
  if (self.hasStudentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.studentId] forKey: @"studentId"];
  }
  if (self.hasRightCount) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.rightCount] forKey: @"rightCount"];
  }
  if (self.hasWrongCount) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.wrongCount] forKey: @"wrongCount"];
  }
  if (self.hasAccuracy) {
    [dictionary setObject: [NSNumber numberWithDouble:self.accuracy] forKey: @"accuracy"];
  }
  if (self.hasModifiedDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.modifiedDate] forKey: @"modifiedDate"];
  }
  if (self.hasDataStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.dataStatus] forKey: @"dataStatus"];
  }
  if (self.hasDepth) {
    [dictionary setObject: [NSNumber numberWithInteger:self.depth] forKey: @"depth"];
  }
  if (self.hasKnowlPointName) {
    [dictionary setObject: self.knowlPointName forKey: @"knowlPointName"];
  }
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  if (self.hasIsParent) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isParent] forKey: @"isParent"];
  }
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[KnowlPb class]]) {
    return NO;
  }
  KnowlPb *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasSchoolId == otherMessage.hasSchoolId &&
      (!self.hasSchoolId || self.schoolId == otherMessage.schoolId) &&
      self.hasSubjectId == otherMessage.hasSubjectId &&
      (!self.hasSubjectId || self.subjectId == otherMessage.subjectId) &&
      self.hasKnowlPointId == otherMessage.hasKnowlPointId &&
      (!self.hasKnowlPointId || self.knowlPointId == otherMessage.knowlPointId) &&
      self.hasStudentId == otherMessage.hasStudentId &&
      (!self.hasStudentId || self.studentId == otherMessage.studentId) &&
      self.hasRightCount == otherMessage.hasRightCount &&
      (!self.hasRightCount || self.rightCount == otherMessage.rightCount) &&
      self.hasWrongCount == otherMessage.hasWrongCount &&
      (!self.hasWrongCount || self.wrongCount == otherMessage.wrongCount) &&
      self.hasAccuracy == otherMessage.hasAccuracy &&
      (!self.hasAccuracy || self.accuracy == otherMessage.accuracy) &&
      self.hasModifiedDate == otherMessage.hasModifiedDate &&
      (!self.hasModifiedDate || self.modifiedDate == otherMessage.modifiedDate) &&
      self.hasDataStatus == otherMessage.hasDataStatus &&
      (!self.hasDataStatus || self.dataStatus == otherMessage.dataStatus) &&
      self.hasDepth == otherMessage.hasDepth &&
      (!self.hasDepth || self.depth == otherMessage.depth) &&
      self.hasKnowlPointName == otherMessage.hasKnowlPointName &&
      (!self.hasKnowlPointName || [self.knowlPointName isEqual:otherMessage.knowlPointName]) &&
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      self.hasIsParent == otherMessage.hasIsParent &&
      (!self.hasIsParent || self.isParent == otherMessage.isParent) &&
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasSchoolId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.schoolId] hash];
  }
  if (self.hasSubjectId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.subjectId] hash];
  }
  if (self.hasKnowlPointId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.knowlPointId] hash];
  }
  if (self.hasStudentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.studentId] hash];
  }
  if (self.hasRightCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.rightCount] hash];
  }
  if (self.hasWrongCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.wrongCount] hash];
  }
  if (self.hasAccuracy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.accuracy] hash];
  }
  if (self.hasModifiedDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.modifiedDate] hash];
  }
  if (self.hasDataStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.dataStatus] hash];
  }
  if (self.hasDepth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.depth] hash];
  }
  if (self.hasKnowlPointName) {
    hashCode = hashCode * 31 + [self.knowlPointName hash];
  }
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  if (self.hasIsParent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isParent] hash];
  }
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface KnowlPbBuilder()
@property (strong) KnowlPb* resultKnowlPb;
@end

@implementation KnowlPbBuilder
@synthesize resultKnowlPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultKnowlPb = [[KnowlPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultKnowlPb;
}
- (KnowlPbBuilder*) clear {
  self.resultKnowlPb = [[KnowlPb alloc] init];
  return self;
}
- (KnowlPbBuilder*) clone {
  return [KnowlPb builderWithPrototype:resultKnowlPb];
}
- (KnowlPb*) defaultInstance {
  return [KnowlPb defaultInstance];
}
- (KnowlPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (KnowlPb*) buildPartial {
  KnowlPb* returnMe = resultKnowlPb;
  self.resultKnowlPb = nil;
  return returnMe;
}
- (KnowlPbBuilder*) mergeFrom:(KnowlPb*) other {
  if (other == [KnowlPb defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasSchoolId) {
    [self setSchoolId:other.schoolId];
  }
  if (other.hasSubjectId) {
    [self setSubjectId:other.subjectId];
  }
  if (other.hasKnowlPointId) {
    [self setKnowlPointId:other.knowlPointId];
  }
  if (other.hasStudentId) {
    [self setStudentId:other.studentId];
  }
  if (other.hasRightCount) {
    [self setRightCount:other.rightCount];
  }
  if (other.hasWrongCount) {
    [self setWrongCount:other.wrongCount];
  }
  if (other.hasAccuracy) {
    [self setAccuracy:other.accuracy];
  }
  if (other.hasModifiedDate) {
    [self setModifiedDate:other.modifiedDate];
  }
  if (other.hasDataStatus) {
    [self setDataStatus:other.dataStatus];
  }
  if (other.hasDepth) {
    [self setDepth:other.depth];
  }
  if (other.hasKnowlPointName) {
    [self setKnowlPointName:other.knowlPointName];
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  if (other.hasIsParent) {
    [self setIsParent:other.isParent];
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (KnowlPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (KnowlPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSchoolId:[input readInt64]];
        break;
      }
      case 24: {
        [self setSubjectId:[input readInt64]];
        break;
      }
      case 32: {
        [self setKnowlPointId:[input readInt64]];
        break;
      }
      case 40: {
        [self setStudentId:[input readInt64]];
        break;
      }
      case 48: {
        [self setRightCount:[input readInt64]];
        break;
      }
      case 56: {
        [self setWrongCount:[input readInt64]];
        break;
      }
      case 65: {
        [self setAccuracy:[input readDouble]];
        break;
      }
      case 72: {
        [self setModifiedDate:[input readInt64]];
        break;
      }
      case 80: {
        [self setDataStatus:[input readInt32]];
        break;
      }
      case 88: {
        [self setDepth:[input readInt32]];
        break;
      }
      case 98: {
        [self setKnowlPointName:[input readString]];
        break;
      }
      case 104: {
        [self setParentId:[input readInt64]];
        break;
      }
      case 112: {
        [self setIsParent:[input readInt32]];
        break;
      }
      case 120: {
        [self setClassId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultKnowlPb.hasId;
}
- (SInt64) id {
  return resultKnowlPb.id;
}
- (KnowlPbBuilder*) setId:(SInt64) value {
  resultKnowlPb.hasId = YES;
  resultKnowlPb.id = value;
  return self;
}
- (KnowlPbBuilder*) clearId {
  resultKnowlPb.hasId = NO;
  resultKnowlPb.id = 0L;
  return self;
}
- (BOOL) hasSchoolId {
  return resultKnowlPb.hasSchoolId;
}
- (SInt64) schoolId {
  return resultKnowlPb.schoolId;
}
- (KnowlPbBuilder*) setSchoolId:(SInt64) value {
  resultKnowlPb.hasSchoolId = YES;
  resultKnowlPb.schoolId = value;
  return self;
}
- (KnowlPbBuilder*) clearSchoolId {
  resultKnowlPb.hasSchoolId = NO;
  resultKnowlPb.schoolId = 0L;
  return self;
}
- (BOOL) hasSubjectId {
  return resultKnowlPb.hasSubjectId;
}
- (SInt64) subjectId {
  return resultKnowlPb.subjectId;
}
- (KnowlPbBuilder*) setSubjectId:(SInt64) value {
  resultKnowlPb.hasSubjectId = YES;
  resultKnowlPb.subjectId = value;
  return self;
}
- (KnowlPbBuilder*) clearSubjectId {
  resultKnowlPb.hasSubjectId = NO;
  resultKnowlPb.subjectId = 0L;
  return self;
}
- (BOOL) hasKnowlPointId {
  return resultKnowlPb.hasKnowlPointId;
}
- (SInt64) knowlPointId {
  return resultKnowlPb.knowlPointId;
}
- (KnowlPbBuilder*) setKnowlPointId:(SInt64) value {
  resultKnowlPb.hasKnowlPointId = YES;
  resultKnowlPb.knowlPointId = value;
  return self;
}
- (KnowlPbBuilder*) clearKnowlPointId {
  resultKnowlPb.hasKnowlPointId = NO;
  resultKnowlPb.knowlPointId = 0L;
  return self;
}
- (BOOL) hasStudentId {
  return resultKnowlPb.hasStudentId;
}
- (SInt64) studentId {
  return resultKnowlPb.studentId;
}
- (KnowlPbBuilder*) setStudentId:(SInt64) value {
  resultKnowlPb.hasStudentId = YES;
  resultKnowlPb.studentId = value;
  return self;
}
- (KnowlPbBuilder*) clearStudentId {
  resultKnowlPb.hasStudentId = NO;
  resultKnowlPb.studentId = 0L;
  return self;
}
- (BOOL) hasRightCount {
  return resultKnowlPb.hasRightCount;
}
- (SInt64) rightCount {
  return resultKnowlPb.rightCount;
}
- (KnowlPbBuilder*) setRightCount:(SInt64) value {
  resultKnowlPb.hasRightCount = YES;
  resultKnowlPb.rightCount = value;
  return self;
}
- (KnowlPbBuilder*) clearRightCount {
  resultKnowlPb.hasRightCount = NO;
  resultKnowlPb.rightCount = 0L;
  return self;
}
- (BOOL) hasWrongCount {
  return resultKnowlPb.hasWrongCount;
}
- (SInt64) wrongCount {
  return resultKnowlPb.wrongCount;
}
- (KnowlPbBuilder*) setWrongCount:(SInt64) value {
  resultKnowlPb.hasWrongCount = YES;
  resultKnowlPb.wrongCount = value;
  return self;
}
- (KnowlPbBuilder*) clearWrongCount {
  resultKnowlPb.hasWrongCount = NO;
  resultKnowlPb.wrongCount = 0L;
  return self;
}
- (BOOL) hasAccuracy {
  return resultKnowlPb.hasAccuracy;
}
- (Float64) accuracy {
  return resultKnowlPb.accuracy;
}
- (KnowlPbBuilder*) setAccuracy:(Float64) value {
  resultKnowlPb.hasAccuracy = YES;
  resultKnowlPb.accuracy = value;
  return self;
}
- (KnowlPbBuilder*) clearAccuracy {
  resultKnowlPb.hasAccuracy = NO;
  resultKnowlPb.accuracy = 0;
  return self;
}
- (BOOL) hasModifiedDate {
  return resultKnowlPb.hasModifiedDate;
}
- (SInt64) modifiedDate {
  return resultKnowlPb.modifiedDate;
}
- (KnowlPbBuilder*) setModifiedDate:(SInt64) value {
  resultKnowlPb.hasModifiedDate = YES;
  resultKnowlPb.modifiedDate = value;
  return self;
}
- (KnowlPbBuilder*) clearModifiedDate {
  resultKnowlPb.hasModifiedDate = NO;
  resultKnowlPb.modifiedDate = 0L;
  return self;
}
- (BOOL) hasDataStatus {
  return resultKnowlPb.hasDataStatus;
}
- (SInt32) dataStatus {
  return resultKnowlPb.dataStatus;
}
- (KnowlPbBuilder*) setDataStatus:(SInt32) value {
  resultKnowlPb.hasDataStatus = YES;
  resultKnowlPb.dataStatus = value;
  return self;
}
- (KnowlPbBuilder*) clearDataStatus {
  resultKnowlPb.hasDataStatus = NO;
  resultKnowlPb.dataStatus = 0;
  return self;
}
- (BOOL) hasDepth {
  return resultKnowlPb.hasDepth;
}
- (SInt32) depth {
  return resultKnowlPb.depth;
}
- (KnowlPbBuilder*) setDepth:(SInt32) value {
  resultKnowlPb.hasDepth = YES;
  resultKnowlPb.depth = value;
  return self;
}
- (KnowlPbBuilder*) clearDepth {
  resultKnowlPb.hasDepth = NO;
  resultKnowlPb.depth = 0;
  return self;
}
- (BOOL) hasKnowlPointName {
  return resultKnowlPb.hasKnowlPointName;
}
- (NSString*) knowlPointName {
  return resultKnowlPb.knowlPointName;
}
- (KnowlPbBuilder*) setKnowlPointName:(NSString*) value {
  resultKnowlPb.hasKnowlPointName = YES;
  resultKnowlPb.knowlPointName = value;
  return self;
}
- (KnowlPbBuilder*) clearKnowlPointName {
  resultKnowlPb.hasKnowlPointName = NO;
  resultKnowlPb.knowlPointName = @"";
  return self;
}
- (BOOL) hasParentId {
  return resultKnowlPb.hasParentId;
}
- (SInt64) parentId {
  return resultKnowlPb.parentId;
}
- (KnowlPbBuilder*) setParentId:(SInt64) value {
  resultKnowlPb.hasParentId = YES;
  resultKnowlPb.parentId = value;
  return self;
}
- (KnowlPbBuilder*) clearParentId {
  resultKnowlPb.hasParentId = NO;
  resultKnowlPb.parentId = 0L;
  return self;
}
- (BOOL) hasIsParent {
  return resultKnowlPb.hasIsParent;
}
- (SInt32) isParent {
  return resultKnowlPb.isParent;
}
- (KnowlPbBuilder*) setIsParent:(SInt32) value {
  resultKnowlPb.hasIsParent = YES;
  resultKnowlPb.isParent = value;
  return self;
}
- (KnowlPbBuilder*) clearIsParent {
  resultKnowlPb.hasIsParent = NO;
  resultKnowlPb.isParent = 0;
  return self;
}
- (BOOL) hasClassId {
  return resultKnowlPb.hasClassId;
}
- (SInt64) classId {
  return resultKnowlPb.classId;
}
- (KnowlPbBuilder*) setClassId:(SInt64) value {
  resultKnowlPb.hasClassId = YES;
  resultKnowlPb.classId = value;
  return self;
}
- (KnowlPbBuilder*) clearClassId {
  resultKnowlPb.hasClassId = NO;
  resultKnowlPb.classId = 0L;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)

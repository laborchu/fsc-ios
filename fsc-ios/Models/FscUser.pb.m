// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FscUser.pb.h"
// @@protoc_insertion_point(imports)

@implementation FscUserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FscUserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FscUserPbList ()
@property (strong) NSMutableArray * fscUserPbArray;
@end

@implementation FscUserPbList

@synthesize fscUserPbArray;
@dynamic fscUserPb;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static FscUserPbList* defaultFscUserPbListInstance = nil;
+ (void) initialize {
  if (self == [FscUserPbList class]) {
    defaultFscUserPbListInstance = [[FscUserPbList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscUserPbListInstance;
}
- (instancetype) defaultInstance {
  return defaultFscUserPbListInstance;
}
- (NSArray *)fscUserPb {
  return fscUserPbArray;
}
- (FscUserPb*)fscUserPbAtIndex:(NSUInteger)index {
  return [fscUserPbArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.fscUserPbArray enumerateObjectsUsingBlock:^(FscUserPb *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.fscUserPbArray enumerateObjectsUsingBlock:^(FscUserPb *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscUserPbList*) parseFromData:(NSData*) data {
  return (FscUserPbList*)[[[FscUserPbList builder] mergeFromData:data] build];
}
+ (FscUserPbList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUserPbList*)[[[FscUserPbList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscUserPbList*) parseFromInputStream:(NSInputStream*) input {
  return (FscUserPbList*)[[[FscUserPbList builder] mergeFromInputStream:input] build];
}
+ (FscUserPbList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUserPbList*)[[[FscUserPbList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscUserPbList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscUserPbList*)[[[FscUserPbList builder] mergeFromCodedInputStream:input] build];
}
+ (FscUserPbList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUserPbList*)[[[FscUserPbList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscUserPbListBuilder*) builder {
  return [[FscUserPbListBuilder alloc] init];
}
+ (FscUserPbListBuilder*) builderWithPrototype:(FscUserPbList*) prototype {
  return [[FscUserPbList builder] mergeFrom:prototype];
}
- (FscUserPbListBuilder*) builder {
  return [FscUserPbList builder];
}
- (FscUserPbListBuilder*) toBuilder {
  return [FscUserPbList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.fscUserPbArray enumerateObjectsUsingBlock:^(FscUserPb *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"fscUserPb"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (FscUserPb* element in self.fscUserPbArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"fscUserPb"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscUserPbList class]]) {
    return NO;
  }
  FscUserPbList *otherMessage = other;
  return
      [self.fscUserPbArray isEqualToArray:otherMessage.fscUserPbArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.fscUserPbArray enumerateObjectsUsingBlock:^(FscUserPb *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscUserPbListBuilder()
@property (strong) FscUserPbList* resultFscUserPbList;
@end

@implementation FscUserPbListBuilder
@synthesize resultFscUserPbList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscUserPbList = [[FscUserPbList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscUserPbList;
}
- (FscUserPbListBuilder*) clear {
  self.resultFscUserPbList = [[FscUserPbList alloc] init];
  return self;
}
- (FscUserPbListBuilder*) clone {
  return [FscUserPbList builderWithPrototype:resultFscUserPbList];
}
- (FscUserPbList*) defaultInstance {
  return [FscUserPbList defaultInstance];
}
- (FscUserPbList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscUserPbList*) buildPartial {
  FscUserPbList* returnMe = resultFscUserPbList;
  self.resultFscUserPbList = nil;
  return returnMe;
}
- (FscUserPbListBuilder*) mergeFrom:(FscUserPbList*) other {
  if (other == [FscUserPbList defaultInstance]) {
    return self;
  }
  if (other.fscUserPbArray.count > 0) {
    if (resultFscUserPbList.fscUserPbArray == nil) {
      resultFscUserPbList.fscUserPbArray = [[NSMutableArray alloc] initWithArray:other.fscUserPbArray];
    } else {
      [resultFscUserPbList.fscUserPbArray addObjectsFromArray:other.fscUserPbArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscUserPbListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscUserPbListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FscUserPbBuilder* subBuilder = [FscUserPb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFscUserPb:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)fscUserPb {
  return resultFscUserPbList.fscUserPbArray;
}
- (FscUserPb*)fscUserPbAtIndex:(NSUInteger)index {
  return [resultFscUserPbList fscUserPbAtIndex:index];
}
- (FscUserPbListBuilder *)addFscUserPb:(FscUserPb*)value {
  if (resultFscUserPbList.fscUserPbArray == nil) {
    resultFscUserPbList.fscUserPbArray = [[NSMutableArray alloc]init];
  }
  [resultFscUserPbList.fscUserPbArray addObject:value];
  return self;
}
- (FscUserPbListBuilder *)setFscUserPbArray:(NSArray *)array {
  resultFscUserPbList.fscUserPbArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (FscUserPbListBuilder *)clearFscUserPb {
  resultFscUserPbList.fscUserPbArray = nil;
  return self;
}
@end

@interface FscUserPb ()
@property SInt64 id;
@property (strong) NSString* name;
@property SInt32 gender;
@property SInt32 userType;
@property (strong) NSString* portrait;
@property (strong) NSString* schoolName;
@property (strong) NSString* keyword;
@property SInt64 linkmanId;
@property SInt32 addStatus;
@property SInt64 classId;
@property (strong) NSData* file;
@end

@implementation FscUserPb

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) _value_ {
  hasGender_ = !!_value_;
}
@synthesize gender;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) _value_ {
  hasUserType_ = !!_value_;
}
@synthesize userType;
- (BOOL) hasPortrait {
  return !!hasPortrait_;
}
- (void) setHasPortrait:(BOOL) _value_ {
  hasPortrait_ = !!_value_;
}
@synthesize portrait;
- (BOOL) hasSchoolName {
  return !!hasSchoolName_;
}
- (void) setHasSchoolName:(BOOL) _value_ {
  hasSchoolName_ = !!_value_;
}
@synthesize schoolName;
- (BOOL) hasKeyword {
  return !!hasKeyword_;
}
- (void) setHasKeyword:(BOOL) _value_ {
  hasKeyword_ = !!_value_;
}
@synthesize keyword;
- (BOOL) hasLinkmanId {
  return !!hasLinkmanId_;
}
- (void) setHasLinkmanId:(BOOL) _value_ {
  hasLinkmanId_ = !!_value_;
}
@synthesize linkmanId;
- (BOOL) hasAddStatus {
  return !!hasAddStatus_;
}
- (void) setHasAddStatus:(BOOL) _value_ {
  hasAddStatus_ = !!_value_;
}
@synthesize addStatus;
- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (BOOL) hasFile {
  return !!hasFile_;
}
- (void) setHasFile:(BOOL) _value_ {
  hasFile_ = !!_value_;
}
@synthesize file;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.gender = 0;
    self.userType = 0;
    self.portrait = @"";
    self.schoolName = @"";
    self.keyword = @"";
    self.linkmanId = 0L;
    self.addStatus = 0;
    self.classId = 0L;
    self.file = [NSData data];
  }
  return self;
}
static FscUserPb* defaultFscUserPbInstance = nil;
+ (void) initialize {
  if (self == [FscUserPb class]) {
    defaultFscUserPbInstance = [[FscUserPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscUserPbInstance;
}
- (instancetype) defaultInstance {
  return defaultFscUserPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasGender) {
    [output writeInt32:3 value:self.gender];
  }
  if (self.hasUserType) {
    [output writeInt32:4 value:self.userType];
  }
  if (self.hasPortrait) {
    [output writeString:5 value:self.portrait];
  }
  if (self.hasSchoolName) {
    [output writeString:6 value:self.schoolName];
  }
  if (self.hasKeyword) {
    [output writeString:7 value:self.keyword];
  }
  if (self.hasLinkmanId) {
    [output writeInt64:8 value:self.linkmanId];
  }
  if (self.hasAddStatus) {
    [output writeInt32:9 value:self.addStatus];
  }
  if (self.hasClassId) {
    [output writeInt64:10 value:self.classId];
  }
  if (self.hasFile) {
    [output writeData:11 value:self.file];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasGender) {
    size_ += computeInt32Size(3, self.gender);
  }
  if (self.hasUserType) {
    size_ += computeInt32Size(4, self.userType);
  }
  if (self.hasPortrait) {
    size_ += computeStringSize(5, self.portrait);
  }
  if (self.hasSchoolName) {
    size_ += computeStringSize(6, self.schoolName);
  }
  if (self.hasKeyword) {
    size_ += computeStringSize(7, self.keyword);
  }
  if (self.hasLinkmanId) {
    size_ += computeInt64Size(8, self.linkmanId);
  }
  if (self.hasAddStatus) {
    size_ += computeInt32Size(9, self.addStatus);
  }
  if (self.hasClassId) {
    size_ += computeInt64Size(10, self.classId);
  }
  if (self.hasFile) {
    size_ += computeDataSize(11, self.file);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscUserPb*) parseFromData:(NSData*) data {
  return (FscUserPb*)[[[FscUserPb builder] mergeFromData:data] build];
}
+ (FscUserPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUserPb*)[[[FscUserPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscUserPb*) parseFromInputStream:(NSInputStream*) input {
  return (FscUserPb*)[[[FscUserPb builder] mergeFromInputStream:input] build];
}
+ (FscUserPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUserPb*)[[[FscUserPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscUserPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscUserPb*)[[[FscUserPb builder] mergeFromCodedInputStream:input] build];
}
+ (FscUserPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUserPb*)[[[FscUserPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscUserPbBuilder*) builder {
  return [[FscUserPbBuilder alloc] init];
}
+ (FscUserPbBuilder*) builderWithPrototype:(FscUserPb*) prototype {
  return [[FscUserPb builder] mergeFrom:prototype];
}
- (FscUserPbBuilder*) builder {
  return [FscUserPb builder];
}
- (FscUserPbBuilder*) toBuilder {
  return [FscUserPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", [NSNumber numberWithInteger:self.gender]];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", [NSNumber numberWithInteger:self.userType]];
  }
  if (self.hasPortrait) {
    [output appendFormat:@"%@%@: %@\n", indent, @"portrait", self.portrait];
  }
  if (self.hasSchoolName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"schoolName", self.schoolName];
  }
  if (self.hasKeyword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"keyword", self.keyword];
  }
  if (self.hasLinkmanId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"linkmanId", [NSNumber numberWithLongLong:self.linkmanId]];
  }
  if (self.hasAddStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"addStatus", [NSNumber numberWithInteger:self.addStatus]];
  }
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  if (self.hasFile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"file", self.file];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasGender) {
    [dictionary setObject: [NSNumber numberWithInteger:self.gender] forKey: @"gender"];
  }
  if (self.hasUserType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userType] forKey: @"userType"];
  }
  if (self.hasPortrait) {
    [dictionary setObject: self.portrait forKey: @"portrait"];
  }
  if (self.hasSchoolName) {
    [dictionary setObject: self.schoolName forKey: @"schoolName"];
  }
  if (self.hasKeyword) {
    [dictionary setObject: self.keyword forKey: @"keyword"];
  }
  if (self.hasLinkmanId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.linkmanId] forKey: @"linkmanId"];
  }
  if (self.hasAddStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.addStatus] forKey: @"addStatus"];
  }
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  if (self.hasFile) {
    [dictionary setObject: self.file forKey: @"file"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscUserPb class]]) {
    return NO;
  }
  FscUserPb *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || self.gender == otherMessage.gender) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      self.hasPortrait == otherMessage.hasPortrait &&
      (!self.hasPortrait || [self.portrait isEqual:otherMessage.portrait]) &&
      self.hasSchoolName == otherMessage.hasSchoolName &&
      (!self.hasSchoolName || [self.schoolName isEqual:otherMessage.schoolName]) &&
      self.hasKeyword == otherMessage.hasKeyword &&
      (!self.hasKeyword || [self.keyword isEqual:otherMessage.keyword]) &&
      self.hasLinkmanId == otherMessage.hasLinkmanId &&
      (!self.hasLinkmanId || self.linkmanId == otherMessage.linkmanId) &&
      self.hasAddStatus == otherMessage.hasAddStatus &&
      (!self.hasAddStatus || self.addStatus == otherMessage.addStatus) &&
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      self.hasFile == otherMessage.hasFile &&
      (!self.hasFile || [self.file isEqual:otherMessage.file]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gender] hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userType] hash];
  }
  if (self.hasPortrait) {
    hashCode = hashCode * 31 + [self.portrait hash];
  }
  if (self.hasSchoolName) {
    hashCode = hashCode * 31 + [self.schoolName hash];
  }
  if (self.hasKeyword) {
    hashCode = hashCode * 31 + [self.keyword hash];
  }
  if (self.hasLinkmanId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.linkmanId] hash];
  }
  if (self.hasAddStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.addStatus] hash];
  }
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  if (self.hasFile) {
    hashCode = hashCode * 31 + [self.file hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscUserPbBuilder()
@property (strong) FscUserPb* resultFscUserPb;
@end

@implementation FscUserPbBuilder
@synthesize resultFscUserPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscUserPb = [[FscUserPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscUserPb;
}
- (FscUserPbBuilder*) clear {
  self.resultFscUserPb = [[FscUserPb alloc] init];
  return self;
}
- (FscUserPbBuilder*) clone {
  return [FscUserPb builderWithPrototype:resultFscUserPb];
}
- (FscUserPb*) defaultInstance {
  return [FscUserPb defaultInstance];
}
- (FscUserPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscUserPb*) buildPartial {
  FscUserPb* returnMe = resultFscUserPb;
  self.resultFscUserPb = nil;
  return returnMe;
}
- (FscUserPbBuilder*) mergeFrom:(FscUserPb*) other {
  if (other == [FscUserPb defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasPortrait) {
    [self setPortrait:other.portrait];
  }
  if (other.hasSchoolName) {
    [self setSchoolName:other.schoolName];
  }
  if (other.hasKeyword) {
    [self setKeyword:other.keyword];
  }
  if (other.hasLinkmanId) {
    [self setLinkmanId:other.linkmanId];
  }
  if (other.hasAddStatus) {
    [self setAddStatus:other.addStatus];
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  if (other.hasFile) {
    [self setFile:other.file];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscUserPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscUserPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setGender:[input readInt32]];
        break;
      }
      case 32: {
        [self setUserType:[input readInt32]];
        break;
      }
      case 42: {
        [self setPortrait:[input readString]];
        break;
      }
      case 50: {
        [self setSchoolName:[input readString]];
        break;
      }
      case 58: {
        [self setKeyword:[input readString]];
        break;
      }
      case 64: {
        [self setLinkmanId:[input readInt64]];
        break;
      }
      case 72: {
        [self setAddStatus:[input readInt32]];
        break;
      }
      case 80: {
        [self setClassId:[input readInt64]];
        break;
      }
      case 90: {
        [self setFile:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultFscUserPb.hasId;
}
- (SInt64) id {
  return resultFscUserPb.id;
}
- (FscUserPbBuilder*) setId:(SInt64) value {
  resultFscUserPb.hasId = YES;
  resultFscUserPb.id = value;
  return self;
}
- (FscUserPbBuilder*) clearId {
  resultFscUserPb.hasId = NO;
  resultFscUserPb.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultFscUserPb.hasName;
}
- (NSString*) name {
  return resultFscUserPb.name;
}
- (FscUserPbBuilder*) setName:(NSString*) value {
  resultFscUserPb.hasName = YES;
  resultFscUserPb.name = value;
  return self;
}
- (FscUserPbBuilder*) clearName {
  resultFscUserPb.hasName = NO;
  resultFscUserPb.name = @"";
  return self;
}
- (BOOL) hasGender {
  return resultFscUserPb.hasGender;
}
- (SInt32) gender {
  return resultFscUserPb.gender;
}
- (FscUserPbBuilder*) setGender:(SInt32) value {
  resultFscUserPb.hasGender = YES;
  resultFscUserPb.gender = value;
  return self;
}
- (FscUserPbBuilder*) clearGender {
  resultFscUserPb.hasGender = NO;
  resultFscUserPb.gender = 0;
  return self;
}
- (BOOL) hasUserType {
  return resultFscUserPb.hasUserType;
}
- (SInt32) userType {
  return resultFscUserPb.userType;
}
- (FscUserPbBuilder*) setUserType:(SInt32) value {
  resultFscUserPb.hasUserType = YES;
  resultFscUserPb.userType = value;
  return self;
}
- (FscUserPbBuilder*) clearUserType {
  resultFscUserPb.hasUserType = NO;
  resultFscUserPb.userType = 0;
  return self;
}
- (BOOL) hasPortrait {
  return resultFscUserPb.hasPortrait;
}
- (NSString*) portrait {
  return resultFscUserPb.portrait;
}
- (FscUserPbBuilder*) setPortrait:(NSString*) value {
  resultFscUserPb.hasPortrait = YES;
  resultFscUserPb.portrait = value;
  return self;
}
- (FscUserPbBuilder*) clearPortrait {
  resultFscUserPb.hasPortrait = NO;
  resultFscUserPb.portrait = @"";
  return self;
}
- (BOOL) hasSchoolName {
  return resultFscUserPb.hasSchoolName;
}
- (NSString*) schoolName {
  return resultFscUserPb.schoolName;
}
- (FscUserPbBuilder*) setSchoolName:(NSString*) value {
  resultFscUserPb.hasSchoolName = YES;
  resultFscUserPb.schoolName = value;
  return self;
}
- (FscUserPbBuilder*) clearSchoolName {
  resultFscUserPb.hasSchoolName = NO;
  resultFscUserPb.schoolName = @"";
  return self;
}
- (BOOL) hasKeyword {
  return resultFscUserPb.hasKeyword;
}
- (NSString*) keyword {
  return resultFscUserPb.keyword;
}
- (FscUserPbBuilder*) setKeyword:(NSString*) value {
  resultFscUserPb.hasKeyword = YES;
  resultFscUserPb.keyword = value;
  return self;
}
- (FscUserPbBuilder*) clearKeyword {
  resultFscUserPb.hasKeyword = NO;
  resultFscUserPb.keyword = @"";
  return self;
}
- (BOOL) hasLinkmanId {
  return resultFscUserPb.hasLinkmanId;
}
- (SInt64) linkmanId {
  return resultFscUserPb.linkmanId;
}
- (FscUserPbBuilder*) setLinkmanId:(SInt64) value {
  resultFscUserPb.hasLinkmanId = YES;
  resultFscUserPb.linkmanId = value;
  return self;
}
- (FscUserPbBuilder*) clearLinkmanId {
  resultFscUserPb.hasLinkmanId = NO;
  resultFscUserPb.linkmanId = 0L;
  return self;
}
- (BOOL) hasAddStatus {
  return resultFscUserPb.hasAddStatus;
}
- (SInt32) addStatus {
  return resultFscUserPb.addStatus;
}
- (FscUserPbBuilder*) setAddStatus:(SInt32) value {
  resultFscUserPb.hasAddStatus = YES;
  resultFscUserPb.addStatus = value;
  return self;
}
- (FscUserPbBuilder*) clearAddStatus {
  resultFscUserPb.hasAddStatus = NO;
  resultFscUserPb.addStatus = 0;
  return self;
}
- (BOOL) hasClassId {
  return resultFscUserPb.hasClassId;
}
- (SInt64) classId {
  return resultFscUserPb.classId;
}
- (FscUserPbBuilder*) setClassId:(SInt64) value {
  resultFscUserPb.hasClassId = YES;
  resultFscUserPb.classId = value;
  return self;
}
- (FscUserPbBuilder*) clearClassId {
  resultFscUserPb.hasClassId = NO;
  resultFscUserPb.classId = 0L;
  return self;
}
- (BOOL) hasFile {
  return resultFscUserPb.hasFile;
}
- (NSData*) file {
  return resultFscUserPb.file;
}
- (FscUserPbBuilder*) setFile:(NSData*) value {
  resultFscUserPb.hasFile = YES;
  resultFscUserPb.file = value;
  return self;
}
- (FscUserPbBuilder*) clearFile {
  resultFscUserPb.hasFile = NO;
  resultFscUserPb.file = [NSData data];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)

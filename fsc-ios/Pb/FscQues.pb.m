// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FscQues.pb.h"
// @@protoc_insertion_point(imports)

@implementation FscQuesRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FscQuesRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface QuesListPb ()
@property (strong) NSMutableArray * quesArray;
@end

@implementation QuesListPb

@synthesize quesArray;
@dynamic ques;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static QuesListPb* defaultQuesListPbInstance = nil;
+ (void) initialize {
  if (self == [QuesListPb class]) {
    defaultQuesListPbInstance = [[QuesListPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultQuesListPbInstance;
}
- (instancetype) defaultInstance {
  return defaultQuesListPbInstance;
}
- (NSArray *)ques {
  return quesArray;
}
- (QuesPb*)quesAtIndex:(NSUInteger)index {
  return [quesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.quesArray enumerateObjectsUsingBlock:^(QuesPb *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.quesArray enumerateObjectsUsingBlock:^(QuesPb *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QuesListPb*) parseFromData:(NSData*) data {
  return (QuesListPb*)[[[QuesListPb builder] mergeFromData:data] build];
}
+ (QuesListPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuesListPb*)[[[QuesListPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuesListPb*) parseFromInputStream:(NSInputStream*) input {
  return (QuesListPb*)[[[QuesListPb builder] mergeFromInputStream:input] build];
}
+ (QuesListPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuesListPb*)[[[QuesListPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuesListPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuesListPb*)[[[QuesListPb builder] mergeFromCodedInputStream:input] build];
}
+ (QuesListPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuesListPb*)[[[QuesListPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuesListPbBuilder*) builder {
  return [[QuesListPbBuilder alloc] init];
}
+ (QuesListPbBuilder*) builderWithPrototype:(QuesListPb*) prototype {
  return [[QuesListPb builder] mergeFrom:prototype];
}
- (QuesListPbBuilder*) builder {
  return [QuesListPb builder];
}
- (QuesListPbBuilder*) toBuilder {
  return [QuesListPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.quesArray enumerateObjectsUsingBlock:^(QuesPb *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ques"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (QuesPb* element in self.quesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"ques"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QuesListPb class]]) {
    return NO;
  }
  QuesListPb *otherMessage = other;
  return
      [self.quesArray isEqualToArray:otherMessage.quesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.quesArray enumerateObjectsUsingBlock:^(QuesPb *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QuesListPbBuilder()
@property (strong) QuesListPb* resultQuesListPb;
@end

@implementation QuesListPbBuilder
@synthesize resultQuesListPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultQuesListPb = [[QuesListPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultQuesListPb;
}
- (QuesListPbBuilder*) clear {
  self.resultQuesListPb = [[QuesListPb alloc] init];
  return self;
}
- (QuesListPbBuilder*) clone {
  return [QuesListPb builderWithPrototype:resultQuesListPb];
}
- (QuesListPb*) defaultInstance {
  return [QuesListPb defaultInstance];
}
- (QuesListPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuesListPb*) buildPartial {
  QuesListPb* returnMe = resultQuesListPb;
  self.resultQuesListPb = nil;
  return returnMe;
}
- (QuesListPbBuilder*) mergeFrom:(QuesListPb*) other {
  if (other == [QuesListPb defaultInstance]) {
    return self;
  }
  if (other.quesArray.count > 0) {
    if (resultQuesListPb.quesArray == nil) {
      resultQuesListPb.quesArray = [[NSMutableArray alloc] initWithArray:other.quesArray];
    } else {
      [resultQuesListPb.quesArray addObjectsFromArray:other.quesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuesListPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuesListPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        QuesPbBuilder* subBuilder = [QuesPb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addQues:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)ques {
  return resultQuesListPb.quesArray;
}
- (QuesPb*)quesAtIndex:(NSUInteger)index {
  return [resultQuesListPb quesAtIndex:index];
}
- (QuesListPbBuilder *)addQues:(QuesPb*)value {
  if (resultQuesListPb.quesArray == nil) {
    resultQuesListPb.quesArray = [[NSMutableArray alloc]init];
  }
  [resultQuesListPb.quesArray addObject:value];
  return self;
}
- (QuesListPbBuilder *)setQuesArray:(NSArray *)array {
  resultQuesListPb.quesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (QuesListPbBuilder *)clearQues {
  resultQuesListPb.quesArray = nil;
  return self;
}
@end

@interface QuesPb ()
@property SInt64 id;
@property SInt64 schoolId;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property SInt32 dataStatus;
@property SInt64 modifiedDate;
@property SInt64 timestamp;
@property SInt64 createdBy;
@end

@implementation QuesPb

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasSchoolId {
  return !!hasSchoolId_;
}
- (void) setHasSchoolId:(BOOL) _value_ {
  hasSchoolId_ = !!_value_;
}
@synthesize schoolId;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasDataStatus {
  return !!hasDataStatus_;
}
- (void) setHasDataStatus:(BOOL) _value_ {
  hasDataStatus_ = !!_value_;
}
@synthesize dataStatus;
- (BOOL) hasModifiedDate {
  return !!hasModifiedDate_;
}
- (void) setHasModifiedDate:(BOOL) _value_ {
  hasModifiedDate_ = !!_value_;
}
@synthesize modifiedDate;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) _value_ {
  hasTimestamp_ = !!_value_;
}
@synthesize timestamp;
- (BOOL) hasCreatedBy {
  return !!hasCreatedBy_;
}
- (void) setHasCreatedBy:(BOOL) _value_ {
  hasCreatedBy_ = !!_value_;
}
@synthesize createdBy;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.schoolId = 0L;
    self.title = @"";
    self.content = @"";
    self.dataStatus = 0;
    self.modifiedDate = 0L;
    self.timestamp = 0L;
    self.createdBy = 0L;
  }
  return self;
}
static QuesPb* defaultQuesPbInstance = nil;
+ (void) initialize {
  if (self == [QuesPb class]) {
    defaultQuesPbInstance = [[QuesPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultQuesPbInstance;
}
- (instancetype) defaultInstance {
  return defaultQuesPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasSchoolId) {
    [output writeInt64:2 value:self.schoolId];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasDataStatus) {
    [output writeInt32:5 value:self.dataStatus];
  }
  if (self.hasModifiedDate) {
    [output writeInt64:6 value:self.modifiedDate];
  }
  if (self.hasTimestamp) {
    [output writeInt64:7 value:self.timestamp];
  }
  if (self.hasCreatedBy) {
    [output writeInt64:8 value:self.createdBy];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasSchoolId) {
    size_ += computeInt64Size(2, self.schoolId);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(3, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasDataStatus) {
    size_ += computeInt32Size(5, self.dataStatus);
  }
  if (self.hasModifiedDate) {
    size_ += computeInt64Size(6, self.modifiedDate);
  }
  if (self.hasTimestamp) {
    size_ += computeInt64Size(7, self.timestamp);
  }
  if (self.hasCreatedBy) {
    size_ += computeInt64Size(8, self.createdBy);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QuesPb*) parseFromData:(NSData*) data {
  return (QuesPb*)[[[QuesPb builder] mergeFromData:data] build];
}
+ (QuesPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuesPb*)[[[QuesPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuesPb*) parseFromInputStream:(NSInputStream*) input {
  return (QuesPb*)[[[QuesPb builder] mergeFromInputStream:input] build];
}
+ (QuesPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuesPb*)[[[QuesPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuesPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuesPb*)[[[QuesPb builder] mergeFromCodedInputStream:input] build];
}
+ (QuesPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuesPb*)[[[QuesPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuesPbBuilder*) builder {
  return [[QuesPbBuilder alloc] init];
}
+ (QuesPbBuilder*) builderWithPrototype:(QuesPb*) prototype {
  return [[QuesPb builder] mergeFrom:prototype];
}
- (QuesPbBuilder*) builder {
  return [QuesPb builder];
}
- (QuesPbBuilder*) toBuilder {
  return [QuesPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasSchoolId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"schoolId", [NSNumber numberWithLongLong:self.schoolId]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasDataStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dataStatus", [NSNumber numberWithInteger:self.dataStatus]];
  }
  if (self.hasModifiedDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"modifiedDate", [NSNumber numberWithLongLong:self.modifiedDate]];
  }
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithLongLong:self.timestamp]];
  }
  if (self.hasCreatedBy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdBy", [NSNumber numberWithLongLong:self.createdBy]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasSchoolId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.schoolId] forKey: @"schoolId"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasDataStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.dataStatus] forKey: @"dataStatus"];
  }
  if (self.hasModifiedDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.modifiedDate] forKey: @"modifiedDate"];
  }
  if (self.hasTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.timestamp] forKey: @"timestamp"];
  }
  if (self.hasCreatedBy) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdBy] forKey: @"createdBy"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QuesPb class]]) {
    return NO;
  }
  QuesPb *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasSchoolId == otherMessage.hasSchoolId &&
      (!self.hasSchoolId || self.schoolId == otherMessage.schoolId) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasDataStatus == otherMessage.hasDataStatus &&
      (!self.hasDataStatus || self.dataStatus == otherMessage.dataStatus) &&
      self.hasModifiedDate == otherMessage.hasModifiedDate &&
      (!self.hasModifiedDate || self.modifiedDate == otherMessage.modifiedDate) &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      self.hasCreatedBy == otherMessage.hasCreatedBy &&
      (!self.hasCreatedBy || self.createdBy == otherMessage.createdBy) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasSchoolId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.schoolId] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasDataStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.dataStatus] hash];
  }
  if (self.hasModifiedDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.modifiedDate] hash];
  }
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timestamp] hash];
  }
  if (self.hasCreatedBy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdBy] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QuesPbBuilder()
@property (strong) QuesPb* resultQuesPb;
@end

@implementation QuesPbBuilder
@synthesize resultQuesPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultQuesPb = [[QuesPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultQuesPb;
}
- (QuesPbBuilder*) clear {
  self.resultQuesPb = [[QuesPb alloc] init];
  return self;
}
- (QuesPbBuilder*) clone {
  return [QuesPb builderWithPrototype:resultQuesPb];
}
- (QuesPb*) defaultInstance {
  return [QuesPb defaultInstance];
}
- (QuesPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuesPb*) buildPartial {
  QuesPb* returnMe = resultQuesPb;
  self.resultQuesPb = nil;
  return returnMe;
}
- (QuesPbBuilder*) mergeFrom:(QuesPb*) other {
  if (other == [QuesPb defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasSchoolId) {
    [self setSchoolId:other.schoolId];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasDataStatus) {
    [self setDataStatus:other.dataStatus];
  }
  if (other.hasModifiedDate) {
    [self setModifiedDate:other.modifiedDate];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasCreatedBy) {
    [self setCreatedBy:other.createdBy];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuesPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuesPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSchoolId:[input readInt64]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 40: {
        [self setDataStatus:[input readInt32]];
        break;
      }
      case 48: {
        [self setModifiedDate:[input readInt64]];
        break;
      }
      case 56: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 64: {
        [self setCreatedBy:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultQuesPb.hasId;
}
- (SInt64) id {
  return resultQuesPb.id;
}
- (QuesPbBuilder*) setId:(SInt64) value {
  resultQuesPb.hasId = YES;
  resultQuesPb.id = value;
  return self;
}
- (QuesPbBuilder*) clearId {
  resultQuesPb.hasId = NO;
  resultQuesPb.id = 0L;
  return self;
}
- (BOOL) hasSchoolId {
  return resultQuesPb.hasSchoolId;
}
- (SInt64) schoolId {
  return resultQuesPb.schoolId;
}
- (QuesPbBuilder*) setSchoolId:(SInt64) value {
  resultQuesPb.hasSchoolId = YES;
  resultQuesPb.schoolId = value;
  return self;
}
- (QuesPbBuilder*) clearSchoolId {
  resultQuesPb.hasSchoolId = NO;
  resultQuesPb.schoolId = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultQuesPb.hasTitle;
}
- (NSString*) title {
  return resultQuesPb.title;
}
- (QuesPbBuilder*) setTitle:(NSString*) value {
  resultQuesPb.hasTitle = YES;
  resultQuesPb.title = value;
  return self;
}
- (QuesPbBuilder*) clearTitle {
  resultQuesPb.hasTitle = NO;
  resultQuesPb.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultQuesPb.hasContent;
}
- (NSString*) content {
  return resultQuesPb.content;
}
- (QuesPbBuilder*) setContent:(NSString*) value {
  resultQuesPb.hasContent = YES;
  resultQuesPb.content = value;
  return self;
}
- (QuesPbBuilder*) clearContent {
  resultQuesPb.hasContent = NO;
  resultQuesPb.content = @"";
  return self;
}
- (BOOL) hasDataStatus {
  return resultQuesPb.hasDataStatus;
}
- (SInt32) dataStatus {
  return resultQuesPb.dataStatus;
}
- (QuesPbBuilder*) setDataStatus:(SInt32) value {
  resultQuesPb.hasDataStatus = YES;
  resultQuesPb.dataStatus = value;
  return self;
}
- (QuesPbBuilder*) clearDataStatus {
  resultQuesPb.hasDataStatus = NO;
  resultQuesPb.dataStatus = 0;
  return self;
}
- (BOOL) hasModifiedDate {
  return resultQuesPb.hasModifiedDate;
}
- (SInt64) modifiedDate {
  return resultQuesPb.modifiedDate;
}
- (QuesPbBuilder*) setModifiedDate:(SInt64) value {
  resultQuesPb.hasModifiedDate = YES;
  resultQuesPb.modifiedDate = value;
  return self;
}
- (QuesPbBuilder*) clearModifiedDate {
  resultQuesPb.hasModifiedDate = NO;
  resultQuesPb.modifiedDate = 0L;
  return self;
}
- (BOOL) hasTimestamp {
  return resultQuesPb.hasTimestamp;
}
- (SInt64) timestamp {
  return resultQuesPb.timestamp;
}
- (QuesPbBuilder*) setTimestamp:(SInt64) value {
  resultQuesPb.hasTimestamp = YES;
  resultQuesPb.timestamp = value;
  return self;
}
- (QuesPbBuilder*) clearTimestamp {
  resultQuesPb.hasTimestamp = NO;
  resultQuesPb.timestamp = 0L;
  return self;
}
- (BOOL) hasCreatedBy {
  return resultQuesPb.hasCreatedBy;
}
- (SInt64) createdBy {
  return resultQuesPb.createdBy;
}
- (QuesPbBuilder*) setCreatedBy:(SInt64) value {
  resultQuesPb.hasCreatedBy = YES;
  resultQuesPb.createdBy = value;
  return self;
}
- (QuesPbBuilder*) clearCreatedBy {
  resultQuesPb.hasCreatedBy = NO;
  resultQuesPb.createdBy = 0L;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)

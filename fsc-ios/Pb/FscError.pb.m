// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FscError.pb.h"
// @@protoc_insertion_point(imports)

@implementation FscErrorRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FscErrorRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FscErrorPbList ()
@property (strong) NSMutableArray * fscErrorPbArray;
@end

@implementation FscErrorPbList

@synthesize fscErrorPbArray;
@dynamic fscErrorPb;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static FscErrorPbList* defaultFscErrorPbListInstance = nil;
+ (void) initialize {
  if (self == [FscErrorPbList class]) {
    defaultFscErrorPbListInstance = [[FscErrorPbList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscErrorPbListInstance;
}
- (instancetype) defaultInstance {
  return defaultFscErrorPbListInstance;
}
- (NSArray *)fscErrorPb {
  return fscErrorPbArray;
}
- (FscErrorRecorderPb*)fscErrorPbAtIndex:(NSUInteger)index {
  return [fscErrorPbArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.fscErrorPbArray enumerateObjectsUsingBlock:^(FscErrorRecorderPb *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.fscErrorPbArray enumerateObjectsUsingBlock:^(FscErrorRecorderPb *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscErrorPbList*) parseFromData:(NSData*) data {
  return (FscErrorPbList*)[[[FscErrorPbList builder] mergeFromData:data] build];
}
+ (FscErrorPbList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscErrorPbList*)[[[FscErrorPbList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscErrorPbList*) parseFromInputStream:(NSInputStream*) input {
  return (FscErrorPbList*)[[[FscErrorPbList builder] mergeFromInputStream:input] build];
}
+ (FscErrorPbList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscErrorPbList*)[[[FscErrorPbList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscErrorPbList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscErrorPbList*)[[[FscErrorPbList builder] mergeFromCodedInputStream:input] build];
}
+ (FscErrorPbList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscErrorPbList*)[[[FscErrorPbList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscErrorPbListBuilder*) builder {
  return [[FscErrorPbListBuilder alloc] init];
}
+ (FscErrorPbListBuilder*) builderWithPrototype:(FscErrorPbList*) prototype {
  return [[FscErrorPbList builder] mergeFrom:prototype];
}
- (FscErrorPbListBuilder*) builder {
  return [FscErrorPbList builder];
}
- (FscErrorPbListBuilder*) toBuilder {
  return [FscErrorPbList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.fscErrorPbArray enumerateObjectsUsingBlock:^(FscErrorRecorderPb *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"fscErrorPb"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (FscErrorRecorderPb* element in self.fscErrorPbArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"fscErrorPb"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscErrorPbList class]]) {
    return NO;
  }
  FscErrorPbList *otherMessage = other;
  return
      [self.fscErrorPbArray isEqualToArray:otherMessage.fscErrorPbArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.fscErrorPbArray enumerateObjectsUsingBlock:^(FscErrorRecorderPb *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscErrorPbListBuilder()
@property (strong) FscErrorPbList* resultFscErrorPbList;
@end

@implementation FscErrorPbListBuilder
@synthesize resultFscErrorPbList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscErrorPbList = [[FscErrorPbList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscErrorPbList;
}
- (FscErrorPbListBuilder*) clear {
  self.resultFscErrorPbList = [[FscErrorPbList alloc] init];
  return self;
}
- (FscErrorPbListBuilder*) clone {
  return [FscErrorPbList builderWithPrototype:resultFscErrorPbList];
}
- (FscErrorPbList*) defaultInstance {
  return [FscErrorPbList defaultInstance];
}
- (FscErrorPbList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscErrorPbList*) buildPartial {
  FscErrorPbList* returnMe = resultFscErrorPbList;
  self.resultFscErrorPbList = nil;
  return returnMe;
}
- (FscErrorPbListBuilder*) mergeFrom:(FscErrorPbList*) other {
  if (other == [FscErrorPbList defaultInstance]) {
    return self;
  }
  if (other.fscErrorPbArray.count > 0) {
    if (resultFscErrorPbList.fscErrorPbArray == nil) {
      resultFscErrorPbList.fscErrorPbArray = [[NSMutableArray alloc] initWithArray:other.fscErrorPbArray];
    } else {
      [resultFscErrorPbList.fscErrorPbArray addObjectsFromArray:other.fscErrorPbArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscErrorPbListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscErrorPbListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FscErrorRecorderPbBuilder* subBuilder = [FscErrorRecorderPb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFscErrorPb:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)fscErrorPb {
  return resultFscErrorPbList.fscErrorPbArray;
}
- (FscErrorRecorderPb*)fscErrorPbAtIndex:(NSUInteger)index {
  return [resultFscErrorPbList fscErrorPbAtIndex:index];
}
- (FscErrorPbListBuilder *)addFscErrorPb:(FscErrorRecorderPb*)value {
  if (resultFscErrorPbList.fscErrorPbArray == nil) {
    resultFscErrorPbList.fscErrorPbArray = [[NSMutableArray alloc]init];
  }
  [resultFscErrorPbList.fscErrorPbArray addObject:value];
  return self;
}
- (FscErrorPbListBuilder *)setFscErrorPbArray:(NSArray *)array {
  resultFscErrorPbList.fscErrorPbArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (FscErrorPbListBuilder *)clearFscErrorPb {
  resultFscErrorPbList.fscErrorPbArray = nil;
  return self;
}
@end

@interface FscErrorRecorderPb ()
@property SInt64 id;
@property SInt64 userId;
@property (strong) NSString* deviceId;
@property (strong) NSString* subscriberId;
@property (strong) NSString* model;
@property (strong) NSString* brand;
@property (strong) NSString* number;
@property (strong) NSString* appVersion;
@property (strong) NSString* osVersion;
@property (strong) NSString* errorMsg;
@property SInt64 createdDate;
@end

@implementation FscErrorRecorderPb

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (BOOL) hasSubscriberId {
  return !!hasSubscriberId_;
}
- (void) setHasSubscriberId:(BOOL) _value_ {
  hasSubscriberId_ = !!_value_;
}
@synthesize subscriberId;
- (BOOL) hasModel {
  return !!hasModel_;
}
- (void) setHasModel:(BOOL) _value_ {
  hasModel_ = !!_value_;
}
@synthesize model;
- (BOOL) hasBrand {
  return !!hasBrand_;
}
- (void) setHasBrand:(BOOL) _value_ {
  hasBrand_ = !!_value_;
}
@synthesize brand;
- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) _value_ {
  hasNumber_ = !!_value_;
}
@synthesize number;
- (BOOL) hasAppVersion {
  return !!hasAppVersion_;
}
- (void) setHasAppVersion:(BOOL) _value_ {
  hasAppVersion_ = !!_value_;
}
@synthesize appVersion;
- (BOOL) hasOsVersion {
  return !!hasOsVersion_;
}
- (void) setHasOsVersion:(BOOL) _value_ {
  hasOsVersion_ = !!_value_;
}
@synthesize osVersion;
- (BOOL) hasErrorMsg {
  return !!hasErrorMsg_;
}
- (void) setHasErrorMsg:(BOOL) _value_ {
  hasErrorMsg_ = !!_value_;
}
@synthesize errorMsg;
- (BOOL) hasCreatedDate {
  return !!hasCreatedDate_;
}
- (void) setHasCreatedDate:(BOOL) _value_ {
  hasCreatedDate_ = !!_value_;
}
@synthesize createdDate;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.userId = 0L;
    self.deviceId = @"";
    self.subscriberId = @"";
    self.model = @"";
    self.brand = @"";
    self.number = @"";
    self.appVersion = @"";
    self.osVersion = @"";
    self.errorMsg = @"";
    self.createdDate = 0L;
  }
  return self;
}
static FscErrorRecorderPb* defaultFscErrorRecorderPbInstance = nil;
+ (void) initialize {
  if (self == [FscErrorRecorderPb class]) {
    defaultFscErrorRecorderPbInstance = [[FscErrorRecorderPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscErrorRecorderPbInstance;
}
- (instancetype) defaultInstance {
  return defaultFscErrorRecorderPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasUserId) {
    [output writeInt64:2 value:self.userId];
  }
  if (self.hasDeviceId) {
    [output writeString:3 value:self.deviceId];
  }
  if (self.hasSubscriberId) {
    [output writeString:4 value:self.subscriberId];
  }
  if (self.hasModel) {
    [output writeString:5 value:self.model];
  }
  if (self.hasBrand) {
    [output writeString:6 value:self.brand];
  }
  if (self.hasNumber) {
    [output writeString:7 value:self.number];
  }
  if (self.hasAppVersion) {
    [output writeString:8 value:self.appVersion];
  }
  if (self.hasOsVersion) {
    [output writeString:9 value:self.osVersion];
  }
  if (self.hasErrorMsg) {
    [output writeString:10 value:self.errorMsg];
  }
  if (self.hasCreatedDate) {
    [output writeInt64:11 value:self.createdDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(2, self.userId);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(3, self.deviceId);
  }
  if (self.hasSubscriberId) {
    size_ += computeStringSize(4, self.subscriberId);
  }
  if (self.hasModel) {
    size_ += computeStringSize(5, self.model);
  }
  if (self.hasBrand) {
    size_ += computeStringSize(6, self.brand);
  }
  if (self.hasNumber) {
    size_ += computeStringSize(7, self.number);
  }
  if (self.hasAppVersion) {
    size_ += computeStringSize(8, self.appVersion);
  }
  if (self.hasOsVersion) {
    size_ += computeStringSize(9, self.osVersion);
  }
  if (self.hasErrorMsg) {
    size_ += computeStringSize(10, self.errorMsg);
  }
  if (self.hasCreatedDate) {
    size_ += computeInt64Size(11, self.createdDate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscErrorRecorderPb*) parseFromData:(NSData*) data {
  return (FscErrorRecorderPb*)[[[FscErrorRecorderPb builder] mergeFromData:data] build];
}
+ (FscErrorRecorderPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscErrorRecorderPb*)[[[FscErrorRecorderPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscErrorRecorderPb*) parseFromInputStream:(NSInputStream*) input {
  return (FscErrorRecorderPb*)[[[FscErrorRecorderPb builder] mergeFromInputStream:input] build];
}
+ (FscErrorRecorderPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscErrorRecorderPb*)[[[FscErrorRecorderPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscErrorRecorderPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscErrorRecorderPb*)[[[FscErrorRecorderPb builder] mergeFromCodedInputStream:input] build];
}
+ (FscErrorRecorderPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscErrorRecorderPb*)[[[FscErrorRecorderPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscErrorRecorderPbBuilder*) builder {
  return [[FscErrorRecorderPbBuilder alloc] init];
}
+ (FscErrorRecorderPbBuilder*) builderWithPrototype:(FscErrorRecorderPb*) prototype {
  return [[FscErrorRecorderPb builder] mergeFrom:prototype];
}
- (FscErrorRecorderPbBuilder*) builder {
  return [FscErrorRecorderPb builder];
}
- (FscErrorRecorderPbBuilder*) toBuilder {
  return [FscErrorRecorderPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasSubscriberId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subscriberId", self.subscriberId];
  }
  if (self.hasModel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"model", self.model];
  }
  if (self.hasBrand) {
    [output appendFormat:@"%@%@: %@\n", indent, @"brand", self.brand];
  }
  if (self.hasNumber) {
    [output appendFormat:@"%@%@: %@\n", indent, @"number", self.number];
  }
  if (self.hasAppVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appVersion", self.appVersion];
  }
  if (self.hasOsVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"osVersion", self.osVersion];
  }
  if (self.hasErrorMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorMsg", self.errorMsg];
  }
  if (self.hasCreatedDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdDate", [NSNumber numberWithLongLong:self.createdDate]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  if (self.hasSubscriberId) {
    [dictionary setObject: self.subscriberId forKey: @"subscriberId"];
  }
  if (self.hasModel) {
    [dictionary setObject: self.model forKey: @"model"];
  }
  if (self.hasBrand) {
    [dictionary setObject: self.brand forKey: @"brand"];
  }
  if (self.hasNumber) {
    [dictionary setObject: self.number forKey: @"number"];
  }
  if (self.hasAppVersion) {
    [dictionary setObject: self.appVersion forKey: @"appVersion"];
  }
  if (self.hasOsVersion) {
    [dictionary setObject: self.osVersion forKey: @"osVersion"];
  }
  if (self.hasErrorMsg) {
    [dictionary setObject: self.errorMsg forKey: @"errorMsg"];
  }
  if (self.hasCreatedDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdDate] forKey: @"createdDate"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscErrorRecorderPb class]]) {
    return NO;
  }
  FscErrorRecorderPb *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasSubscriberId == otherMessage.hasSubscriberId &&
      (!self.hasSubscriberId || [self.subscriberId isEqual:otherMessage.subscriberId]) &&
      self.hasModel == otherMessage.hasModel &&
      (!self.hasModel || [self.model isEqual:otherMessage.model]) &&
      self.hasBrand == otherMessage.hasBrand &&
      (!self.hasBrand || [self.brand isEqual:otherMessage.brand]) &&
      self.hasNumber == otherMessage.hasNumber &&
      (!self.hasNumber || [self.number isEqual:otherMessage.number]) &&
      self.hasAppVersion == otherMessage.hasAppVersion &&
      (!self.hasAppVersion || [self.appVersion isEqual:otherMessage.appVersion]) &&
      self.hasOsVersion == otherMessage.hasOsVersion &&
      (!self.hasOsVersion || [self.osVersion isEqual:otherMessage.osVersion]) &&
      self.hasErrorMsg == otherMessage.hasErrorMsg &&
      (!self.hasErrorMsg || [self.errorMsg isEqual:otherMessage.errorMsg]) &&
      self.hasCreatedDate == otherMessage.hasCreatedDate &&
      (!self.hasCreatedDate || self.createdDate == otherMessage.createdDate) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasSubscriberId) {
    hashCode = hashCode * 31 + [self.subscriberId hash];
  }
  if (self.hasModel) {
    hashCode = hashCode * 31 + [self.model hash];
  }
  if (self.hasBrand) {
    hashCode = hashCode * 31 + [self.brand hash];
  }
  if (self.hasNumber) {
    hashCode = hashCode * 31 + [self.number hash];
  }
  if (self.hasAppVersion) {
    hashCode = hashCode * 31 + [self.appVersion hash];
  }
  if (self.hasOsVersion) {
    hashCode = hashCode * 31 + [self.osVersion hash];
  }
  if (self.hasErrorMsg) {
    hashCode = hashCode * 31 + [self.errorMsg hash];
  }
  if (self.hasCreatedDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdDate] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscErrorRecorderPbBuilder()
@property (strong) FscErrorRecorderPb* resultFscErrorRecorderPb;
@end

@implementation FscErrorRecorderPbBuilder
@synthesize resultFscErrorRecorderPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscErrorRecorderPb = [[FscErrorRecorderPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscErrorRecorderPb;
}
- (FscErrorRecorderPbBuilder*) clear {
  self.resultFscErrorRecorderPb = [[FscErrorRecorderPb alloc] init];
  return self;
}
- (FscErrorRecorderPbBuilder*) clone {
  return [FscErrorRecorderPb builderWithPrototype:resultFscErrorRecorderPb];
}
- (FscErrorRecorderPb*) defaultInstance {
  return [FscErrorRecorderPb defaultInstance];
}
- (FscErrorRecorderPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscErrorRecorderPb*) buildPartial {
  FscErrorRecorderPb* returnMe = resultFscErrorRecorderPb;
  self.resultFscErrorRecorderPb = nil;
  return returnMe;
}
- (FscErrorRecorderPbBuilder*) mergeFrom:(FscErrorRecorderPb*) other {
  if (other == [FscErrorRecorderPb defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasSubscriberId) {
    [self setSubscriberId:other.subscriberId];
  }
  if (other.hasModel) {
    [self setModel:other.model];
  }
  if (other.hasBrand) {
    [self setBrand:other.brand];
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasAppVersion) {
    [self setAppVersion:other.appVersion];
  }
  if (other.hasOsVersion) {
    [self setOsVersion:other.osVersion];
  }
  if (other.hasErrorMsg) {
    [self setErrorMsg:other.errorMsg];
  }
  if (other.hasCreatedDate) {
    [self setCreatedDate:other.createdDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscErrorRecorderPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscErrorRecorderPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 26: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 34: {
        [self setSubscriberId:[input readString]];
        break;
      }
      case 42: {
        [self setModel:[input readString]];
        break;
      }
      case 50: {
        [self setBrand:[input readString]];
        break;
      }
      case 58: {
        [self setNumber:[input readString]];
        break;
      }
      case 66: {
        [self setAppVersion:[input readString]];
        break;
      }
      case 74: {
        [self setOsVersion:[input readString]];
        break;
      }
      case 82: {
        [self setErrorMsg:[input readString]];
        break;
      }
      case 88: {
        [self setCreatedDate:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultFscErrorRecorderPb.hasId;
}
- (SInt64) id {
  return resultFscErrorRecorderPb.id;
}
- (FscErrorRecorderPbBuilder*) setId:(SInt64) value {
  resultFscErrorRecorderPb.hasId = YES;
  resultFscErrorRecorderPb.id = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearId {
  resultFscErrorRecorderPb.hasId = NO;
  resultFscErrorRecorderPb.id = 0L;
  return self;
}
- (BOOL) hasUserId {
  return resultFscErrorRecorderPb.hasUserId;
}
- (SInt64) userId {
  return resultFscErrorRecorderPb.userId;
}
- (FscErrorRecorderPbBuilder*) setUserId:(SInt64) value {
  resultFscErrorRecorderPb.hasUserId = YES;
  resultFscErrorRecorderPb.userId = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearUserId {
  resultFscErrorRecorderPb.hasUserId = NO;
  resultFscErrorRecorderPb.userId = 0L;
  return self;
}
- (BOOL) hasDeviceId {
  return resultFscErrorRecorderPb.hasDeviceId;
}
- (NSString*) deviceId {
  return resultFscErrorRecorderPb.deviceId;
}
- (FscErrorRecorderPbBuilder*) setDeviceId:(NSString*) value {
  resultFscErrorRecorderPb.hasDeviceId = YES;
  resultFscErrorRecorderPb.deviceId = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearDeviceId {
  resultFscErrorRecorderPb.hasDeviceId = NO;
  resultFscErrorRecorderPb.deviceId = @"";
  return self;
}
- (BOOL) hasSubscriberId {
  return resultFscErrorRecorderPb.hasSubscriberId;
}
- (NSString*) subscriberId {
  return resultFscErrorRecorderPb.subscriberId;
}
- (FscErrorRecorderPbBuilder*) setSubscriberId:(NSString*) value {
  resultFscErrorRecorderPb.hasSubscriberId = YES;
  resultFscErrorRecorderPb.subscriberId = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearSubscriberId {
  resultFscErrorRecorderPb.hasSubscriberId = NO;
  resultFscErrorRecorderPb.subscriberId = @"";
  return self;
}
- (BOOL) hasModel {
  return resultFscErrorRecorderPb.hasModel;
}
- (NSString*) model {
  return resultFscErrorRecorderPb.model;
}
- (FscErrorRecorderPbBuilder*) setModel:(NSString*) value {
  resultFscErrorRecorderPb.hasModel = YES;
  resultFscErrorRecorderPb.model = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearModel {
  resultFscErrorRecorderPb.hasModel = NO;
  resultFscErrorRecorderPb.model = @"";
  return self;
}
- (BOOL) hasBrand {
  return resultFscErrorRecorderPb.hasBrand;
}
- (NSString*) brand {
  return resultFscErrorRecorderPb.brand;
}
- (FscErrorRecorderPbBuilder*) setBrand:(NSString*) value {
  resultFscErrorRecorderPb.hasBrand = YES;
  resultFscErrorRecorderPb.brand = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearBrand {
  resultFscErrorRecorderPb.hasBrand = NO;
  resultFscErrorRecorderPb.brand = @"";
  return self;
}
- (BOOL) hasNumber {
  return resultFscErrorRecorderPb.hasNumber;
}
- (NSString*) number {
  return resultFscErrorRecorderPb.number;
}
- (FscErrorRecorderPbBuilder*) setNumber:(NSString*) value {
  resultFscErrorRecorderPb.hasNumber = YES;
  resultFscErrorRecorderPb.number = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearNumber {
  resultFscErrorRecorderPb.hasNumber = NO;
  resultFscErrorRecorderPb.number = @"";
  return self;
}
- (BOOL) hasAppVersion {
  return resultFscErrorRecorderPb.hasAppVersion;
}
- (NSString*) appVersion {
  return resultFscErrorRecorderPb.appVersion;
}
- (FscErrorRecorderPbBuilder*) setAppVersion:(NSString*) value {
  resultFscErrorRecorderPb.hasAppVersion = YES;
  resultFscErrorRecorderPb.appVersion = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearAppVersion {
  resultFscErrorRecorderPb.hasAppVersion = NO;
  resultFscErrorRecorderPb.appVersion = @"";
  return self;
}
- (BOOL) hasOsVersion {
  return resultFscErrorRecorderPb.hasOsVersion;
}
- (NSString*) osVersion {
  return resultFscErrorRecorderPb.osVersion;
}
- (FscErrorRecorderPbBuilder*) setOsVersion:(NSString*) value {
  resultFscErrorRecorderPb.hasOsVersion = YES;
  resultFscErrorRecorderPb.osVersion = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearOsVersion {
  resultFscErrorRecorderPb.hasOsVersion = NO;
  resultFscErrorRecorderPb.osVersion = @"";
  return self;
}
- (BOOL) hasErrorMsg {
  return resultFscErrorRecorderPb.hasErrorMsg;
}
- (NSString*) errorMsg {
  return resultFscErrorRecorderPb.errorMsg;
}
- (FscErrorRecorderPbBuilder*) setErrorMsg:(NSString*) value {
  resultFscErrorRecorderPb.hasErrorMsg = YES;
  resultFscErrorRecorderPb.errorMsg = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearErrorMsg {
  resultFscErrorRecorderPb.hasErrorMsg = NO;
  resultFscErrorRecorderPb.errorMsg = @"";
  return self;
}
- (BOOL) hasCreatedDate {
  return resultFscErrorRecorderPb.hasCreatedDate;
}
- (SInt64) createdDate {
  return resultFscErrorRecorderPb.createdDate;
}
- (FscErrorRecorderPbBuilder*) setCreatedDate:(SInt64) value {
  resultFscErrorRecorderPb.hasCreatedDate = YES;
  resultFscErrorRecorderPb.createdDate = value;
  return self;
}
- (FscErrorRecorderPbBuilder*) clearCreatedDate {
  resultFscErrorRecorderPb.hasCreatedDate = NO;
  resultFscErrorRecorderPb.createdDate = 0L;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FscFuncStat.pb.h"
// @@protoc_insertion_point(imports)

@implementation FscFuncStatRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FscFuncStatRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FscFuncStatPbList ()
@property (strong) NSMutableArray * fscFuncStatPbArray;
@end

@implementation FscFuncStatPbList

@synthesize fscFuncStatPbArray;
@dynamic fscFuncStatPb;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static FscFuncStatPbList* defaultFscFuncStatPbListInstance = nil;
+ (void) initialize {
  if (self == [FscFuncStatPbList class]) {
    defaultFscFuncStatPbListInstance = [[FscFuncStatPbList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscFuncStatPbListInstance;
}
- (instancetype) defaultInstance {
  return defaultFscFuncStatPbListInstance;
}
- (NSArray *)fscFuncStatPb {
  return fscFuncStatPbArray;
}
- (FscFuncStatPb*)fscFuncStatPbAtIndex:(NSUInteger)index {
  return [fscFuncStatPbArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.fscFuncStatPbArray enumerateObjectsUsingBlock:^(FscFuncStatPb *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.fscFuncStatPbArray enumerateObjectsUsingBlock:^(FscFuncStatPb *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscFuncStatPbList*) parseFromData:(NSData*) data {
  return (FscFuncStatPbList*)[[[FscFuncStatPbList builder] mergeFromData:data] build];
}
+ (FscFuncStatPbList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscFuncStatPbList*)[[[FscFuncStatPbList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscFuncStatPbList*) parseFromInputStream:(NSInputStream*) input {
  return (FscFuncStatPbList*)[[[FscFuncStatPbList builder] mergeFromInputStream:input] build];
}
+ (FscFuncStatPbList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscFuncStatPbList*)[[[FscFuncStatPbList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscFuncStatPbList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscFuncStatPbList*)[[[FscFuncStatPbList builder] mergeFromCodedInputStream:input] build];
}
+ (FscFuncStatPbList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscFuncStatPbList*)[[[FscFuncStatPbList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscFuncStatPbListBuilder*) builder {
  return [[FscFuncStatPbListBuilder alloc] init];
}
+ (FscFuncStatPbListBuilder*) builderWithPrototype:(FscFuncStatPbList*) prototype {
  return [[FscFuncStatPbList builder] mergeFrom:prototype];
}
- (FscFuncStatPbListBuilder*) builder {
  return [FscFuncStatPbList builder];
}
- (FscFuncStatPbListBuilder*) toBuilder {
  return [FscFuncStatPbList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.fscFuncStatPbArray enumerateObjectsUsingBlock:^(FscFuncStatPb *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"fscFuncStatPb"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (FscFuncStatPb* element in self.fscFuncStatPbArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"fscFuncStatPb"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscFuncStatPbList class]]) {
    return NO;
  }
  FscFuncStatPbList *otherMessage = other;
  return
      [self.fscFuncStatPbArray isEqualToArray:otherMessage.fscFuncStatPbArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.fscFuncStatPbArray enumerateObjectsUsingBlock:^(FscFuncStatPb *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscFuncStatPbListBuilder()
@property (strong) FscFuncStatPbList* resultFscFuncStatPbList;
@end

@implementation FscFuncStatPbListBuilder
@synthesize resultFscFuncStatPbList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscFuncStatPbList = [[FscFuncStatPbList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscFuncStatPbList;
}
- (FscFuncStatPbListBuilder*) clear {
  self.resultFscFuncStatPbList = [[FscFuncStatPbList alloc] init];
  return self;
}
- (FscFuncStatPbListBuilder*) clone {
  return [FscFuncStatPbList builderWithPrototype:resultFscFuncStatPbList];
}
- (FscFuncStatPbList*) defaultInstance {
  return [FscFuncStatPbList defaultInstance];
}
- (FscFuncStatPbList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscFuncStatPbList*) buildPartial {
  FscFuncStatPbList* returnMe = resultFscFuncStatPbList;
  self.resultFscFuncStatPbList = nil;
  return returnMe;
}
- (FscFuncStatPbListBuilder*) mergeFrom:(FscFuncStatPbList*) other {
  if (other == [FscFuncStatPbList defaultInstance]) {
    return self;
  }
  if (other.fscFuncStatPbArray.count > 0) {
    if (resultFscFuncStatPbList.fscFuncStatPbArray == nil) {
      resultFscFuncStatPbList.fscFuncStatPbArray = [[NSMutableArray alloc] initWithArray:other.fscFuncStatPbArray];
    } else {
      [resultFscFuncStatPbList.fscFuncStatPbArray addObjectsFromArray:other.fscFuncStatPbArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscFuncStatPbListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscFuncStatPbListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FscFuncStatPbBuilder* subBuilder = [FscFuncStatPb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFscFuncStatPb:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)fscFuncStatPb {
  return resultFscFuncStatPbList.fscFuncStatPbArray;
}
- (FscFuncStatPb*)fscFuncStatPbAtIndex:(NSUInteger)index {
  return [resultFscFuncStatPbList fscFuncStatPbAtIndex:index];
}
- (FscFuncStatPbListBuilder *)addFscFuncStatPb:(FscFuncStatPb*)value {
  if (resultFscFuncStatPbList.fscFuncStatPbArray == nil) {
    resultFscFuncStatPbList.fscFuncStatPbArray = [[NSMutableArray alloc]init];
  }
  [resultFscFuncStatPbList.fscFuncStatPbArray addObject:value];
  return self;
}
- (FscFuncStatPbListBuilder *)setFscFuncStatPbArray:(NSArray *)array {
  resultFscFuncStatPbList.fscFuncStatPbArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (FscFuncStatPbListBuilder *)clearFscFuncStatPb {
  resultFscFuncStatPbList.fscFuncStatPbArray = nil;
  return self;
}
@end

@interface FscFuncStatPb ()
@property SInt64 userId;
@property (strong) NSString* code;
@property SInt64 createdDate;
@end

@implementation FscFuncStatPb

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasCreatedDate {
  return !!hasCreatedDate_;
}
- (void) setHasCreatedDate:(BOOL) _value_ {
  hasCreatedDate_ = !!_value_;
}
@synthesize createdDate;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.code = @"";
    self.createdDate = 0L;
  }
  return self;
}
static FscFuncStatPb* defaultFscFuncStatPbInstance = nil;
+ (void) initialize {
  if (self == [FscFuncStatPb class]) {
    defaultFscFuncStatPbInstance = [[FscFuncStatPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscFuncStatPbInstance;
}
- (instancetype) defaultInstance {
  return defaultFscFuncStatPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt64:1 value:self.userId];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasCreatedDate) {
    [output writeInt64:3 value:self.createdDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt64Size(1, self.userId);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasCreatedDate) {
    size_ += computeInt64Size(3, self.createdDate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscFuncStatPb*) parseFromData:(NSData*) data {
  return (FscFuncStatPb*)[[[FscFuncStatPb builder] mergeFromData:data] build];
}
+ (FscFuncStatPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscFuncStatPb*)[[[FscFuncStatPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscFuncStatPb*) parseFromInputStream:(NSInputStream*) input {
  return (FscFuncStatPb*)[[[FscFuncStatPb builder] mergeFromInputStream:input] build];
}
+ (FscFuncStatPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscFuncStatPb*)[[[FscFuncStatPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscFuncStatPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscFuncStatPb*)[[[FscFuncStatPb builder] mergeFromCodedInputStream:input] build];
}
+ (FscFuncStatPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscFuncStatPb*)[[[FscFuncStatPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscFuncStatPbBuilder*) builder {
  return [[FscFuncStatPbBuilder alloc] init];
}
+ (FscFuncStatPbBuilder*) builderWithPrototype:(FscFuncStatPb*) prototype {
  return [[FscFuncStatPb builder] mergeFrom:prototype];
}
- (FscFuncStatPbBuilder*) builder {
  return [FscFuncStatPb builder];
}
- (FscFuncStatPbBuilder*) toBuilder {
  return [FscFuncStatPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasCreatedDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdDate", [NSNumber numberWithLongLong:self.createdDate]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasCreatedDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdDate] forKey: @"createdDate"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscFuncStatPb class]]) {
    return NO;
  }
  FscFuncStatPb *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasCreatedDate == otherMessage.hasCreatedDate &&
      (!self.hasCreatedDate || self.createdDate == otherMessage.createdDate) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasCreatedDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdDate] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscFuncStatPbBuilder()
@property (strong) FscFuncStatPb* resultFscFuncStatPb;
@end

@implementation FscFuncStatPbBuilder
@synthesize resultFscFuncStatPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscFuncStatPb = [[FscFuncStatPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscFuncStatPb;
}
- (FscFuncStatPbBuilder*) clear {
  self.resultFscFuncStatPb = [[FscFuncStatPb alloc] init];
  return self;
}
- (FscFuncStatPbBuilder*) clone {
  return [FscFuncStatPb builderWithPrototype:resultFscFuncStatPb];
}
- (FscFuncStatPb*) defaultInstance {
  return [FscFuncStatPb defaultInstance];
}
- (FscFuncStatPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscFuncStatPb*) buildPartial {
  FscFuncStatPb* returnMe = resultFscFuncStatPb;
  self.resultFscFuncStatPb = nil;
  return returnMe;
}
- (FscFuncStatPbBuilder*) mergeFrom:(FscFuncStatPb*) other {
  if (other == [FscFuncStatPb defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasCreatedDate) {
    [self setCreatedDate:other.createdDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscFuncStatPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscFuncStatPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 24: {
        [self setCreatedDate:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultFscFuncStatPb.hasUserId;
}
- (SInt64) userId {
  return resultFscFuncStatPb.userId;
}
- (FscFuncStatPbBuilder*) setUserId:(SInt64) value {
  resultFscFuncStatPb.hasUserId = YES;
  resultFscFuncStatPb.userId = value;
  return self;
}
- (FscFuncStatPbBuilder*) clearUserId {
  resultFscFuncStatPb.hasUserId = NO;
  resultFscFuncStatPb.userId = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultFscFuncStatPb.hasCode;
}
- (NSString*) code {
  return resultFscFuncStatPb.code;
}
- (FscFuncStatPbBuilder*) setCode:(NSString*) value {
  resultFscFuncStatPb.hasCode = YES;
  resultFscFuncStatPb.code = value;
  return self;
}
- (FscFuncStatPbBuilder*) clearCode {
  resultFscFuncStatPb.hasCode = NO;
  resultFscFuncStatPb.code = @"";
  return self;
}
- (BOOL) hasCreatedDate {
  return resultFscFuncStatPb.hasCreatedDate;
}
- (SInt64) createdDate {
  return resultFscFuncStatPb.createdDate;
}
- (FscFuncStatPbBuilder*) setCreatedDate:(SInt64) value {
  resultFscFuncStatPb.hasCreatedDate = YES;
  resultFscFuncStatPb.createdDate = value;
  return self;
}
- (FscFuncStatPbBuilder*) clearCreatedDate {
  resultFscFuncStatPb.hasCreatedDate = NO;
  resultFscFuncStatPb.createdDate = 0L;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FscBbi.pb.h"
// @@protoc_insertion_point(imports)

@implementation FscBbiRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FscBbiRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FscUpdateTagPb ()
@property SInt64 schoolId;
@property SInt64 subjectDate;
@end

@implementation FscUpdateTagPb

- (BOOL) hasSchoolId {
  return !!hasSchoolId_;
}
- (void) setHasSchoolId:(BOOL) _value_ {
  hasSchoolId_ = !!_value_;
}
@synthesize schoolId;
- (BOOL) hasSubjectDate {
  return !!hasSubjectDate_;
}
- (void) setHasSubjectDate:(BOOL) _value_ {
  hasSubjectDate_ = !!_value_;
}
@synthesize subjectDate;
- (instancetype) init {
  if ((self = [super init])) {
    self.schoolId = 0L;
    self.subjectDate = 0L;
  }
  return self;
}
static FscUpdateTagPb* defaultFscUpdateTagPbInstance = nil;
+ (void) initialize {
  if (self == [FscUpdateTagPb class]) {
    defaultFscUpdateTagPbInstance = [[FscUpdateTagPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscUpdateTagPbInstance;
}
- (instancetype) defaultInstance {
  return defaultFscUpdateTagPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSchoolId) {
    [output writeInt64:1 value:self.schoolId];
  }
  if (self.hasSubjectDate) {
    [output writeInt64:2 value:self.subjectDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSchoolId) {
    size_ += computeInt64Size(1, self.schoolId);
  }
  if (self.hasSubjectDate) {
    size_ += computeInt64Size(2, self.subjectDate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscUpdateTagPb*) parseFromData:(NSData*) data {
  return (FscUpdateTagPb*)[[[FscUpdateTagPb builder] mergeFromData:data] build];
}
+ (FscUpdateTagPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUpdateTagPb*)[[[FscUpdateTagPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscUpdateTagPb*) parseFromInputStream:(NSInputStream*) input {
  return (FscUpdateTagPb*)[[[FscUpdateTagPb builder] mergeFromInputStream:input] build];
}
+ (FscUpdateTagPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUpdateTagPb*)[[[FscUpdateTagPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscUpdateTagPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscUpdateTagPb*)[[[FscUpdateTagPb builder] mergeFromCodedInputStream:input] build];
}
+ (FscUpdateTagPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscUpdateTagPb*)[[[FscUpdateTagPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscUpdateTagPbBuilder*) builder {
  return [[FscUpdateTagPbBuilder alloc] init];
}
+ (FscUpdateTagPbBuilder*) builderWithPrototype:(FscUpdateTagPb*) prototype {
  return [[FscUpdateTagPb builder] mergeFrom:prototype];
}
- (FscUpdateTagPbBuilder*) builder {
  return [FscUpdateTagPb builder];
}
- (FscUpdateTagPbBuilder*) toBuilder {
  return [FscUpdateTagPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSchoolId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"schoolId", [NSNumber numberWithLongLong:self.schoolId]];
  }
  if (self.hasSubjectDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subjectDate", [NSNumber numberWithLongLong:self.subjectDate]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSchoolId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.schoolId] forKey: @"schoolId"];
  }
  if (self.hasSubjectDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.subjectDate] forKey: @"subjectDate"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscUpdateTagPb class]]) {
    return NO;
  }
  FscUpdateTagPb *otherMessage = other;
  return
      self.hasSchoolId == otherMessage.hasSchoolId &&
      (!self.hasSchoolId || self.schoolId == otherMessage.schoolId) &&
      self.hasSubjectDate == otherMessage.hasSubjectDate &&
      (!self.hasSubjectDate || self.subjectDate == otherMessage.subjectDate) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSchoolId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.schoolId] hash];
  }
  if (self.hasSubjectDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.subjectDate] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscUpdateTagPbBuilder()
@property (strong) FscUpdateTagPb* resultFscUpdateTagPb;
@end

@implementation FscUpdateTagPbBuilder
@synthesize resultFscUpdateTagPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscUpdateTagPb = [[FscUpdateTagPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscUpdateTagPb;
}
- (FscUpdateTagPbBuilder*) clear {
  self.resultFscUpdateTagPb = [[FscUpdateTagPb alloc] init];
  return self;
}
- (FscUpdateTagPbBuilder*) clone {
  return [FscUpdateTagPb builderWithPrototype:resultFscUpdateTagPb];
}
- (FscUpdateTagPb*) defaultInstance {
  return [FscUpdateTagPb defaultInstance];
}
- (FscUpdateTagPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscUpdateTagPb*) buildPartial {
  FscUpdateTagPb* returnMe = resultFscUpdateTagPb;
  self.resultFscUpdateTagPb = nil;
  return returnMe;
}
- (FscUpdateTagPbBuilder*) mergeFrom:(FscUpdateTagPb*) other {
  if (other == [FscUpdateTagPb defaultInstance]) {
    return self;
  }
  if (other.hasSchoolId) {
    [self setSchoolId:other.schoolId];
  }
  if (other.hasSubjectDate) {
    [self setSubjectDate:other.subjectDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscUpdateTagPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscUpdateTagPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSchoolId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSubjectDate:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSchoolId {
  return resultFscUpdateTagPb.hasSchoolId;
}
- (SInt64) schoolId {
  return resultFscUpdateTagPb.schoolId;
}
- (FscUpdateTagPbBuilder*) setSchoolId:(SInt64) value {
  resultFscUpdateTagPb.hasSchoolId = YES;
  resultFscUpdateTagPb.schoolId = value;
  return self;
}
- (FscUpdateTagPbBuilder*) clearSchoolId {
  resultFscUpdateTagPb.hasSchoolId = NO;
  resultFscUpdateTagPb.schoolId = 0L;
  return self;
}
- (BOOL) hasSubjectDate {
  return resultFscUpdateTagPb.hasSubjectDate;
}
- (SInt64) subjectDate {
  return resultFscUpdateTagPb.subjectDate;
}
- (FscUpdateTagPbBuilder*) setSubjectDate:(SInt64) value {
  resultFscUpdateTagPb.hasSubjectDate = YES;
  resultFscUpdateTagPb.subjectDate = value;
  return self;
}
- (FscUpdateTagPbBuilder*) clearSubjectDate {
  resultFscUpdateTagPb.hasSubjectDate = NO;
  resultFscUpdateTagPb.subjectDate = 0L;
  return self;
}
@end

@interface FscBbiRespPb ()
@property (strong) FscUpdateTagPb* fscUpdateTagPb;
@property (strong) NSMutableArray * fscSubjectPbArray;
@end

@implementation FscBbiRespPb

- (BOOL) hasFscUpdateTagPb {
  return !!hasFscUpdateTagPb_;
}
- (void) setHasFscUpdateTagPb:(BOOL) _value_ {
  hasFscUpdateTagPb_ = !!_value_;
}
@synthesize fscUpdateTagPb;
@synthesize fscSubjectPbArray;
@dynamic fscSubjectPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.fscUpdateTagPb = [FscUpdateTagPb defaultInstance];
  }
  return self;
}
static FscBbiRespPb* defaultFscBbiRespPbInstance = nil;
+ (void) initialize {
  if (self == [FscBbiRespPb class]) {
    defaultFscBbiRespPbInstance = [[FscBbiRespPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscBbiRespPbInstance;
}
- (instancetype) defaultInstance {
  return defaultFscBbiRespPbInstance;
}
- (NSArray *)fscSubjectPb {
  return fscSubjectPbArray;
}
- (FscSubjectPb*)fscSubjectPbAtIndex:(NSUInteger)index {
  return [fscSubjectPbArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFscUpdateTagPb) {
    [output writeMessage:1 value:self.fscUpdateTagPb];
  }
  [self.fscSubjectPbArray enumerateObjectsUsingBlock:^(FscSubjectPb *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFscUpdateTagPb) {
    size_ += computeMessageSize(1, self.fscUpdateTagPb);
  }
  [self.fscSubjectPbArray enumerateObjectsUsingBlock:^(FscSubjectPb *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscBbiRespPb*) parseFromData:(NSData*) data {
  return (FscBbiRespPb*)[[[FscBbiRespPb builder] mergeFromData:data] build];
}
+ (FscBbiRespPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscBbiRespPb*)[[[FscBbiRespPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscBbiRespPb*) parseFromInputStream:(NSInputStream*) input {
  return (FscBbiRespPb*)[[[FscBbiRespPb builder] mergeFromInputStream:input] build];
}
+ (FscBbiRespPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscBbiRespPb*)[[[FscBbiRespPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscBbiRespPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscBbiRespPb*)[[[FscBbiRespPb builder] mergeFromCodedInputStream:input] build];
}
+ (FscBbiRespPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscBbiRespPb*)[[[FscBbiRespPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscBbiRespPbBuilder*) builder {
  return [[FscBbiRespPbBuilder alloc] init];
}
+ (FscBbiRespPbBuilder*) builderWithPrototype:(FscBbiRespPb*) prototype {
  return [[FscBbiRespPb builder] mergeFrom:prototype];
}
- (FscBbiRespPbBuilder*) builder {
  return [FscBbiRespPb builder];
}
- (FscBbiRespPbBuilder*) toBuilder {
  return [FscBbiRespPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFscUpdateTagPb) {
    [output appendFormat:@"%@%@ {\n", indent, @"fscUpdateTagPb"];
    [self.fscUpdateTagPb writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.fscSubjectPbArray enumerateObjectsUsingBlock:^(FscSubjectPb *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"fscSubjectPb"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFscUpdateTagPb) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.fscUpdateTagPb storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"fscUpdateTagPb"];
  }
  for (FscSubjectPb* element in self.fscSubjectPbArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"fscSubjectPb"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscBbiRespPb class]]) {
    return NO;
  }
  FscBbiRespPb *otherMessage = other;
  return
      self.hasFscUpdateTagPb == otherMessage.hasFscUpdateTagPb &&
      (!self.hasFscUpdateTagPb || [self.fscUpdateTagPb isEqual:otherMessage.fscUpdateTagPb]) &&
      [self.fscSubjectPbArray isEqualToArray:otherMessage.fscSubjectPbArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFscUpdateTagPb) {
    hashCode = hashCode * 31 + [self.fscUpdateTagPb hash];
  }
  [self.fscSubjectPbArray enumerateObjectsUsingBlock:^(FscSubjectPb *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscBbiRespPbBuilder()
@property (strong) FscBbiRespPb* resultFscBbiRespPb;
@end

@implementation FscBbiRespPbBuilder
@synthesize resultFscBbiRespPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscBbiRespPb = [[FscBbiRespPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscBbiRespPb;
}
- (FscBbiRespPbBuilder*) clear {
  self.resultFscBbiRespPb = [[FscBbiRespPb alloc] init];
  return self;
}
- (FscBbiRespPbBuilder*) clone {
  return [FscBbiRespPb builderWithPrototype:resultFscBbiRespPb];
}
- (FscBbiRespPb*) defaultInstance {
  return [FscBbiRespPb defaultInstance];
}
- (FscBbiRespPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscBbiRespPb*) buildPartial {
  FscBbiRespPb* returnMe = resultFscBbiRespPb;
  self.resultFscBbiRespPb = nil;
  return returnMe;
}
- (FscBbiRespPbBuilder*) mergeFrom:(FscBbiRespPb*) other {
  if (other == [FscBbiRespPb defaultInstance]) {
    return self;
  }
  if (other.hasFscUpdateTagPb) {
    [self mergeFscUpdateTagPb:other.fscUpdateTagPb];
  }
  if (other.fscSubjectPbArray.count > 0) {
    if (resultFscBbiRespPb.fscSubjectPbArray == nil) {
      resultFscBbiRespPb.fscSubjectPbArray = [[NSMutableArray alloc] initWithArray:other.fscSubjectPbArray];
    } else {
      [resultFscBbiRespPb.fscSubjectPbArray addObjectsFromArray:other.fscSubjectPbArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscBbiRespPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscBbiRespPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FscUpdateTagPbBuilder* subBuilder = [FscUpdateTagPb builder];
        if (self.hasFscUpdateTagPb) {
          [subBuilder mergeFrom:self.fscUpdateTagPb];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFscUpdateTagPb:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FscSubjectPbBuilder* subBuilder = [FscSubjectPb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFscSubjectPb:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasFscUpdateTagPb {
  return resultFscBbiRespPb.hasFscUpdateTagPb;
}
- (FscUpdateTagPb*) fscUpdateTagPb {
  return resultFscBbiRespPb.fscUpdateTagPb;
}
- (FscBbiRespPbBuilder*) setFscUpdateTagPb:(FscUpdateTagPb*) value {
  resultFscBbiRespPb.hasFscUpdateTagPb = YES;
  resultFscBbiRespPb.fscUpdateTagPb = value;
  return self;
}
- (FscBbiRespPbBuilder*) setFscUpdateTagPbBuilder:(FscUpdateTagPbBuilder*) builderForValue {
  return [self setFscUpdateTagPb:[builderForValue build]];
}
- (FscBbiRespPbBuilder*) mergeFscUpdateTagPb:(FscUpdateTagPb*) value {
  if (resultFscBbiRespPb.hasFscUpdateTagPb &&
      resultFscBbiRespPb.fscUpdateTagPb != [FscUpdateTagPb defaultInstance]) {
    resultFscBbiRespPb.fscUpdateTagPb =
      [[[FscUpdateTagPb builderWithPrototype:resultFscBbiRespPb.fscUpdateTagPb] mergeFrom:value] buildPartial];
  } else {
    resultFscBbiRespPb.fscUpdateTagPb = value;
  }
  resultFscBbiRespPb.hasFscUpdateTagPb = YES;
  return self;
}
- (FscBbiRespPbBuilder*) clearFscUpdateTagPb {
  resultFscBbiRespPb.hasFscUpdateTagPb = NO;
  resultFscBbiRespPb.fscUpdateTagPb = [FscUpdateTagPb defaultInstance];
  return self;
}
- (NSMutableArray *)fscSubjectPb {
  return resultFscBbiRespPb.fscSubjectPbArray;
}
- (FscSubjectPb*)fscSubjectPbAtIndex:(NSUInteger)index {
  return [resultFscBbiRespPb fscSubjectPbAtIndex:index];
}
- (FscBbiRespPbBuilder *)addFscSubjectPb:(FscSubjectPb*)value {
  if (resultFscBbiRespPb.fscSubjectPbArray == nil) {
    resultFscBbiRespPb.fscSubjectPbArray = [[NSMutableArray alloc]init];
  }
  [resultFscBbiRespPb.fscSubjectPbArray addObject:value];
  return self;
}
- (FscBbiRespPbBuilder *)setFscSubjectPbArray:(NSArray *)array {
  resultFscBbiRespPb.fscSubjectPbArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (FscBbiRespPbBuilder *)clearFscSubjectPb {
  resultFscBbiRespPb.fscSubjectPbArray = nil;
  return self;
}
@end

@interface FscSubjectPb ()
@property SInt64 id;
@property (strong) NSString* name;
@end

@implementation FscSubjectPb

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
  }
  return self;
}
static FscSubjectPb* defaultFscSubjectPbInstance = nil;
+ (void) initialize {
  if (self == [FscSubjectPb class]) {
    defaultFscSubjectPbInstance = [[FscSubjectPb alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFscSubjectPbInstance;
}
- (instancetype) defaultInstance {
  return defaultFscSubjectPbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FscSubjectPb*) parseFromData:(NSData*) data {
  return (FscSubjectPb*)[[[FscSubjectPb builder] mergeFromData:data] build];
}
+ (FscSubjectPb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscSubjectPb*)[[[FscSubjectPb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FscSubjectPb*) parseFromInputStream:(NSInputStream*) input {
  return (FscSubjectPb*)[[[FscSubjectPb builder] mergeFromInputStream:input] build];
}
+ (FscSubjectPb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscSubjectPb*)[[[FscSubjectPb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscSubjectPb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FscSubjectPb*)[[[FscSubjectPb builder] mergeFromCodedInputStream:input] build];
}
+ (FscSubjectPb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FscSubjectPb*)[[[FscSubjectPb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FscSubjectPbBuilder*) builder {
  return [[FscSubjectPbBuilder alloc] init];
}
+ (FscSubjectPbBuilder*) builderWithPrototype:(FscSubjectPb*) prototype {
  return [[FscSubjectPb builder] mergeFrom:prototype];
}
- (FscSubjectPbBuilder*) builder {
  return [FscSubjectPb builder];
}
- (FscSubjectPbBuilder*) toBuilder {
  return [FscSubjectPb builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FscSubjectPb class]]) {
    return NO;
  }
  FscSubjectPb *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FscSubjectPbBuilder()
@property (strong) FscSubjectPb* resultFscSubjectPb;
@end

@implementation FscSubjectPbBuilder
@synthesize resultFscSubjectPb;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFscSubjectPb = [[FscSubjectPb alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFscSubjectPb;
}
- (FscSubjectPbBuilder*) clear {
  self.resultFscSubjectPb = [[FscSubjectPb alloc] init];
  return self;
}
- (FscSubjectPbBuilder*) clone {
  return [FscSubjectPb builderWithPrototype:resultFscSubjectPb];
}
- (FscSubjectPb*) defaultInstance {
  return [FscSubjectPb defaultInstance];
}
- (FscSubjectPb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FscSubjectPb*) buildPartial {
  FscSubjectPb* returnMe = resultFscSubjectPb;
  self.resultFscSubjectPb = nil;
  return returnMe;
}
- (FscSubjectPbBuilder*) mergeFrom:(FscSubjectPb*) other {
  if (other == [FscSubjectPb defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FscSubjectPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FscSubjectPbBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultFscSubjectPb.hasId;
}
- (SInt64) id {
  return resultFscSubjectPb.id;
}
- (FscSubjectPbBuilder*) setId:(SInt64) value {
  resultFscSubjectPb.hasId = YES;
  resultFscSubjectPb.id = value;
  return self;
}
- (FscSubjectPbBuilder*) clearId {
  resultFscSubjectPb.hasId = NO;
  resultFscSubjectPb.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultFscSubjectPb.hasName;
}
- (NSString*) name {
  return resultFscSubjectPb.name;
}
- (FscSubjectPbBuilder*) setName:(NSString*) value {
  resultFscSubjectPb.hasName = YES;
  resultFscSubjectPb.name = value;
  return self;
}
- (FscSubjectPbBuilder*) clearName {
  resultFscSubjectPb.hasName = NO;
  resultFscSubjectPb.name = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
